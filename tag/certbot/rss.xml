<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Coding Coconut • Posts by &#34;certbot&#34; tag</title>
        <link>https://coding-coconut.com</link>
        <description>주니어 웹 프론트엔드/백엔드 개발자. 공부하는 것도, 노는 것도 그만큼 좋아합니다. 덕질 없으면 어떻게 살아? </description>
        <language>ko</language>
        <pubDate>Wed, 24 Aug 2022 18:14:09 +0900</pubDate>
        <lastBuildDate>Wed, 24 Aug 2022 18:14:09 +0900</lastBuildDate>
        <category>certbot</category>
        <category>docker</category>
        <category>hexo</category>
        <category>issue</category>
        <category>github_page</category>
        <category>custom_domain</category>
        <category>배포</category>
        <category>hexo_deploy</category>
        <category>https</category>
        <category>인증서</category>
        <category>apache</category>
        <category>dns</category>
        <category>domain</category>
        <category>ssh</category>
        <category>terminal</category>
        <category>cmd</category>
        <category>bash</category>
        <category>스크랩</category>
        <category>pm2</category>
        <category>잡담</category>
        <category>비동기</category>
        <category>asyncawait</category>
        <category>postman</category>
        <category>속도 개선</category>
        <item>
            <guid isPermalink="true">https://coding-coconut.com/2022/08/24/Linux-%EC%84%9C%EB%B2%84%EC%97%90%EC%84%9C-https-%EC%9D%B8%EC%A6%9D%EA%B3%BC-Apache2-%ED%94%84%EB%A1%9D%EC%8B%9C%ED%8C%A8%EC%8A%A4-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0/</guid>
            <title>Linux 서버에서 https 인증과 Apache2 프록시패스 설정하기</title>
            <link>https://coding-coconut.com/2022/08/24/Linux-%EC%84%9C%EB%B2%84%EC%97%90%EC%84%9C-https-%EC%9D%B8%EC%A6%9D%EA%B3%BC-Apache2-%ED%94%84%EB%A1%9D%EC%8B%9C%ED%8C%A8%EC%8A%A4-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0/</link>
            <category>certbot</category>
            <category>배포</category>
            <category>https</category>
            <category>인증서</category>
            <category>apache</category>
            <pubDate>Wed, 24 Aug 2022 18:14:09 +0900</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;들어가며&#34;&gt;&lt;a href=&#34;#들어가며&#34; class=&#34;headerlink&#34; title=&#34;들어가며&#34;&gt;&lt;/a&gt;들어가며&lt;/h3&gt;&lt;p&gt;인증서 발급방법은 기존에 알고있어서 문제가 되지 않았는데 아파치 설정파일 만지는 법을 까먹어서 한동안 설정파일과 씨름했다.. -.-;;&lt;br&gt;로그인한 유저가 관리자 권한일 경우 굳이 sudo를 입력하지 않아도 된다!&lt;/p&gt;
&lt;h3 id=&#34;0-apache2-를-깔려면-apt를-사용해야-하므로-업데이트가-필요&#34;&gt;&lt;a href=&#34;#0-apache2-를-깔려면-apt를-사용해야-하므로-업데이트가-필요&#34; class=&#34;headerlink&#34; title=&#34;0. apache2 를 깔려면 apt를 사용해야 하므로 업데이트가 필요&#34;&gt;&lt;/a&gt;0. apache2 를 깔려면 apt를 사용해야 하므로 업데이트가 필요&lt;/h3&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo apt update&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;1-linux-전용-apache2-설치&#34;&gt;&lt;a href=&#34;#1-linux-전용-apache2-설치&#34; class=&#34;headerlink&#34; title=&#34;1. linux 전용 apache2 설치&#34;&gt;&lt;/a&gt;1. linux 전용 apache2 설치&lt;/h3&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo apt install apache2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;2-000-default-conf-편집&#34;&gt;&lt;a href=&#34;#2-000-default-conf-편집&#34; class=&#34;headerlink&#34; title=&#34;2. 000-default.conf 편집&#34;&gt;&lt;/a&gt;2. 000-default.conf 편집&lt;/h3&gt;&lt;p&gt;위치는 리눅스 우분투 서버18 기준 맨~ 위 디렉토리 /etc/apache2/site-available/000-default.conf 이다&lt;br&gt;vi 로 편집하거나 (apache2 를 처음 설치하게 되면 기본으로 파일설정 권한이 읽기전용이다 -.-;;;)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;파일 권한 수정(읽기 쓰기 실행 다 허용)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo chmod 777 000-default.conf[혹은 디렉토리]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;000-default.conf 를 아래처럼 편집한 후 저장&lt;br&gt;vi 명령어를 사용해서 즉석으로 편집해도 되고 파일질라같은 ftp 응용프로그램을 이용해서 로컬에서 작성하고 덮어쓰기해도 좋다.&lt;br&gt;vi 명령어일 경우 저장하고 나가기는 esc + :wq!이다&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#LoadModule 구문을 써 줘야 ProxyPass가 작동한다. 이거 미리 설정하면 아래 파일을 실행시키는 스크립트 작성할 필요 x&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LoadModule proxy_module modules/mod_proxy.so&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LoadModule proxy_http_module modules/mod_proxy_http.so&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;VirtualHost *:80&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ServerAdmin webmaster@localhost&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	DocumentRoot /var/www/html&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ServerName yourdomain.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ServerAlias yourdomain.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ProxyRequests Off&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ProxyPreserveHost On&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# 80으로 받으면 아래 주소로 넘긴다. 여기서의 로컬호스트는 apache가 돌아가는 컴퓨터의 로컬호스트.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;#주소창에서 보여지는 주소도 서버네임으로 바뀌어서 보여진다.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	ProxyPass / http://localhost:8080/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	ProxyPassReverse / http://localhost:8080/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ErrorLog &lt;span class=&#34;variable&#34;&gt;$&amp;#123;APACHE_LOG_DIR&amp;#125;&lt;/span&gt;/error.log&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	CustomLog &lt;span class=&#34;variable&#34;&gt;$&amp;#123;APACHE_LOG_DIR&amp;#125;&lt;/span&gt;/access.log combined&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RewriteEngine on&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RewriteCond %&amp;#123;SERVER_NAME&amp;#125; =content-ad-dev.fastview.co.kr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RewriteRule ^ https://%&amp;#123;SERVER_NAME&amp;#125;%&amp;#123;REQUEST_URI&amp;#125; [END,NE,R=permanent]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;3-Apache2-서비스-재가동&#34;&gt;&lt;a href=&#34;#3-Apache2-서비스-재가동&#34; class=&#34;headerlink&#34; title=&#34;3. Apache2 서비스 재가동&#34;&gt;&lt;/a&gt;3. Apache2 서비스 재가동&lt;/h3&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo service apache2 restart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;4-Snap-설치-이미-깔려-있으면-생략&#34;&gt;&lt;a href=&#34;#4-Snap-설치-이미-깔려-있으면-생략&#34; class=&#34;headerlink&#34; title=&#34;4. Snap 설치(이미 깔려 있으면 생략)&#34;&gt;&lt;/a&gt;4. Snap 설치(이미 깔려 있으면 생략)&lt;/h3&gt;&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo snap install core; sudo snap refresh core&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;5-Snap으로-Certbot-설치&#34;&gt;&lt;a href=&#34;#5-Snap으로-Certbot-설치&#34; class=&#34;headerlink&#34; title=&#34;5. Snap으로 Certbot 설치&#34;&gt;&lt;/a&gt;5. Snap으로 Certbot 설치&lt;/h3&gt;&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo snap install --classic certbot&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;6-Apache-사양으로-인증서-발급-apache2-서비스가-가동-중이고-80포트가-뜷려있어야-함&#34;&gt;&lt;a href=&#34;#6-Apache-사양으로-인증서-발급-apache2-서비스가-가동-중이고-80포트가-뜷려있어야-함&#34; class=&#34;headerlink&#34; title=&#34;6. Apache 사양으로 인증서 발급(apache2 서비스가 가동 중이고 80포트가 뜷려있어야 함)&#34;&gt;&lt;/a&gt;6. Apache 사양으로 인증서 발급(apache2 서비스가 가동 중이고 80포트가 뜷려있어야 함)&lt;/h3&gt;&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo certbot --apache&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;머라머라 나오는데 읽어보면 도메인 입력해달라는것과 인증서 만료 시 발송할 이메일좀 설정해달라는 내용&lt;br&gt;그리고.. 뭔가를 보낸다는 내용인데 이 항목은 생략해도 됨&lt;/p&gt;
&lt;p&gt;만약 과정이 꼬여서 000-default.conf를 다시 수정해야 하면, 인증서파일 재설정을 하면 된다.&lt;/p&gt;
&lt;p&gt;인증서가 이미 존재할 때 위 명령어를 입력하면 인증서 목록이 뜨는데 원하는 도메인의 번호를 입력한다.&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1: Attempt to reinstall this existing certificate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;해당 항목을 선택하면 Certbot의 인증서 파일(000-default-le-ssl.conf)이 다시 갱신된다.&lt;/p&gt;
&lt;h3 id=&#34;7-확인&#34;&gt;&lt;a href=&#34;#7-확인&#34; class=&#34;headerlink&#34; title=&#34;7. 확인&#34;&gt;&lt;/a&gt;7. 확인&lt;/h3&gt;&lt;p&gt;웹페이지에 접속해서 자물쇠 표시가 뜨면 성공!&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://coding-coconut.com/2021/08/13/Certbot%EC%9C%BC%EB%A1%9C-https-%EC%84%9C%EB%B8%8C%EB%8F%84%EB%A9%94%EC%9D%B8-%EB%93%B1%EB%A1%9D%ED%95%98%EA%B8%B0/</guid>
            <title>Certbot으로 https 서브도메인 등록하기</title>
            <link>https://coding-coconut.com/2021/08/13/Certbot%EC%9C%BC%EB%A1%9C-https-%EC%84%9C%EB%B8%8C%EB%8F%84%EB%A9%94%EC%9D%B8-%EB%93%B1%EB%A1%9D%ED%95%98%EA%B8%B0/</link>
            <category>certbot</category>
            <pubDate>Fri, 13 Aug 2021 08:55:12 +0900</pubDate>
            <description><![CDATA[ &lt;p&gt;시행착오가 좀 많았다.&lt;/p&gt;
&lt;p&gt;회사서 홈페이지를 새로 구축했다. 구축하는 김에 구식이었던 정적 호스팅을 버리고.. 서버도 올릴 수 있도록 요즘 클라우드 호스팅으로 갈아탔다!&lt;/p&gt;
&lt;p&gt;AWS EC2처럼 가상컴퓨터지만.. 클라우드라서 훨씬 가격이 저렴하다.  (사실 써본 입장으로써 AWS는 좀 깡패라는 생각이 든다 가격 측정상…ㅡ,.ㅡ)&lt;/p&gt;
&lt;p&gt;클라우드 중 가장 싸다는 Vultr호스팅을 이용하고 싶었으나.. 회원가입할때 1인 1계정 원칙이 있는데, 하필이면 잘 모르는 초짜 고고넛이 회원가입할 때 실수를 해서 락이 걸렸다. &lt;/p&gt;
&lt;p&gt;문의 처리는 빨랐지만  Vultr가 해외 호스팅 서버라 처리하는게 좀 번거로워서..  고심한 끝에,&lt;/p&gt;
&lt;p&gt;cafe24의 클라우드 호스팅 서비스를 이용하기로 결정했다.&lt;/p&gt;
&lt;p&gt;가격도 Vultr 랑 비교해서 둘이 비슷하다! 성능은 cafe24 클라우드 호스팅 쪽이 램을 더 잘 지원하고.. 용량이 쪼끔 더 작다.(벌쳐는 램이 작고 용량이 큰 편) 그리고.. 벌쳐는 클라우드 서버를 사면 공인 IP도 같이 주는데 cafe24쪽은 공인 IP를 따로 사야한다.&lt;/p&gt;
&lt;p&gt;사내 홈피처럼 공적인 부분은 공인 IP가 꼭 필요하므로~ 공인 IP도 클라우드 서버와 같이 구매했다.&lt;/p&gt;
&lt;p&gt;개인 블로그 구축을 경험삼아 Ubuntu 18 바이오닉 서버에 Node.js Express서버를 배포하려고 했다.&lt;/p&gt;
&lt;p&gt;cafe24클라우드의 특성상 보안을 위해 SSH키를 사용해야만 접속할 수 있고,&lt;/p&gt;
&lt;p&gt;SSH 키는 cafe24클라우드가 서버 살 때 키까지 만들어준다.&lt;/p&gt;
&lt;p&gt;SSH 키로 접속할때 고고낫은 Putty를 이용했으므로, 키를 읽어서 변환해주는 puttygen이 필요했다.&lt;/p&gt;
&lt;p&gt;홈피서 pem 키를 받고 puttygen에서 불러오기를 하면 exe프로그램이 putty전용으로 key를 변환해준다.&lt;/p&gt;
&lt;p&gt;save Private Key를 하면 ppk로 내려지는데,&lt;/p&gt;
&lt;p&gt;Putty &amp;gt; Connection &amp;gt; SSH &amp;gt; Auth 에서 맨 밑 항목을 보면 Private key file for authentication 하고 ppk키를 등록하는 부분이 있다.&lt;/p&gt;
&lt;p&gt;푸티에도 등록해주고, 파일질라에도 상단의 사이트 관리자 항목을 보면 키를 등록해주는 부분이 있다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;❕  Putty 와 Filezila 연결을 위한 방화벽 설정은 cafe24 클라우드 웹콘솔 화면에서 사람이 정말~ 설정하기 쉽도록 되어 있다. ufw 치고.. 막 콘솔 창 안 들여다봐도 된다 ㅎㅎ&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;여튼 key를 이용해서 putty로 ssh접속하면, 지정된 계정 이름으로 접속하게 되어있는데, 이 계정한텐 root권한이 없어서 명령수행 할 때 일시적으로 제약을 해제해줘야 했다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo -i&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;파일질라로 배포할 파일 업로드하는 과정은 생략한다. Express(Node)는 일종의 SSR서버이므로~ 직접 접근하게 하면 좀 위험하고 정적 서버인 apache를 통해 프록시하면 좋을 것 같아서 apache2도 깔았다. 프록시설정하는 과정도 생략한다!&lt;/p&gt;
&lt;p&gt;인터넷 상으로 접속 확인하고 ip도메인 연결하고 도메인 주소를 치면 사이트가 다 뜨는 것까지 확인했다.(다만 http일 뿐이지..)&lt;/p&gt;
&lt;h3 id=&#34;본론&#34;&gt;&lt;a href=&#34;#본론&#34; class=&#34;headerlink&#34; title=&#34;본론!&#34;&gt;&lt;/a&gt;본론!&lt;/h3&gt;&lt;p&gt;서론이 쫌 길었다.. 클라우드 얘기만 대판 ..ㅡ.ㅡ) 이제 https를 등록할 차례인데,&lt;/p&gt;
&lt;p&gt;Certbot이 너무 친절한게.. 공식 사이트 가서 서버 종류랑 컴퓨터 운영체제를 입력하면 어떻게 깔아야 하는지 튜토리얼이 너무 잘 되어있다…ㅠ.ㅠ&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://certbot.eff.org/lets-encrypt/ubuntubionic-apache&#34;&gt;https://certbot.eff.org/lets-encrypt/ubuntubionic-apache&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;아파치 사양으로 하라는 대로 했다. 여기까진 아무 문제 없었다. 근데 왠걸.. 선택지가 두개 뜨는데, 한 도메인은 www를 포함하고, 다른 한 도메인은 www를 포함하지 않는 도메인을 보여주면서 둘 중 인증서 발급 받을 주소를 하나 택하라고 한다&lt;/p&gt;
&lt;p&gt;둘다 발급받을건데.? 하고 서트봇 인증서 발급 명령을 두번 실행하면&lt;/p&gt;
&lt;p&gt;인증서는 두개인데.. 사이트 들어가서 확인해봤더니만,&lt;/p&gt;
&lt;p&gt;정작 적용은 맨 마지막에 발급받은 인증서 하나만 되는 것 같았다.&lt;/p&gt;
&lt;p&gt;여기서 좀 많이 해멨는데, 방법은.. 인증서를 하나만 발급받고 (www든 www가 아니든)&lt;/p&gt;
&lt;p&gt;아래처럼 서브도메인으로 인증서를 확장하는 명령을 내리는 것이었다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;certbot --expand -d existing.com,example.com,newdomain.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;이렇게 하면 하나의 인증서 아래에 여러 서브도메인이 붙는다.&lt;/p&gt;
&lt;p&gt;여튼 이걸로 도메인 여러개 발급받는 것 해결했음…&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>