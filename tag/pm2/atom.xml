<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://coding-coconut.com</id>
    <title>Coding Coconut • Posts by &#34;pm2&#34; tag</title>
    <link href="https://coding-coconut.com" />
    <updated>2024-04-12T08:16:08.000Z</updated>
    <category term="cluster" />
    <category term="docker" />
    <category term="podman" />
    <category term="pm2" />
    <category term="ubuntu" />
    <category term="selenium" />
    <category term="chrome" />
    <category term="web_crawling" />
    <category term="문제해결" />
    <category term="이슈" />
    <category term="error" />
    <category term="certbot" />
    <category term="hexo" />
    <category term="aws" />
    <category term="배포" />
    <category term="dns" />
    <category term="github_page" />
    <category term="domain" />
    <category term="issue" />
    <category term="custom_domain" />
    <category term="hexo_deploy" />
    <category term="https" />
    <category term="인증서" />
    <category term="apache" />
    <category term="ssh" />
    <category term="terminal" />
    <category term="cmd" />
    <category term="bash" />
    <category term="스크랩" />
    <category term="잡담" />
    <category term="dontstarve" />
    <category term="modding" />
    <category term="문제" />
    <category term="비동기" />
    <category term="asyncawait" />
    <category term="postman" />
    <category term="속도 개선" />
    <entry>
        <id>https://coding-coconut.com/post/cluwf5chz0001i45o83d69cuw/</id>
        <title>Docker 또는 Podman Container에서의 Selenium 웹 크롤링 Timed out 오류</title>
        <link rel="alternate" href="https://coding-coconut.com/post/cluwf5chz0001i45o83d69cuw/"/>
        <content type="html">&lt;p&gt;이전에 selenium 프로젝트를 했다고 안일했었는지 크롤링 프로젝트를 만들고 배포하자마자 오류가 났다.&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Timed out receiving message from renderer: 600.000&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;원인이 뭔지 도통 모르겠어서 이것저것 찾아봤는데 결국 해결하긴 했음.&lt;/p&gt;
&lt;h3 id=&#34;오류-고치는-과정&#34;&gt;&lt;a href=&#34;#오류-고치는-과정&#34; class=&#34;headerlink&#34; title=&#34;오류 고치는 과정&#34;&gt;&lt;/a&gt;오류 고치는 과정&lt;/h3&gt;&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Ubuntu 20.04 LTS&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Podman Container Build&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;프로젝트 이미지 생성용 Dockerfile&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;FROM selenium/node-chrome:123.0.6312.86-chromedriver-123.0.6312.86-20240402&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(이후 Node.js 설치 과정)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;프로젝트 가동 후 셀레늄이 크롬을 띄우는 타이밍에서 타임아웃 메시지 확인&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Timed out receiving message from renderer: 600.000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;혹여 버전이 서로 안맞나 싶어서 컨테이너 내부 sh명령어로 버전 확인&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;podman &lt;span class=&#34;built_in&#34;&gt;exec&lt;/span&gt; -it [프로젝트명] sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;google-chrome --version&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; Google Chrome 123.0.6312.86 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chromedriver --version&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; ChromeDriver 123.0.6312.86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;이후 버전도 맞고 컨테이너 내부에 구글 크롬이 안 깔린것도 아님을 확인&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;구글에 에러 검색/스택오버플로우 탐색. 아래 포스트는 오류 해결에 결정적이었다.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://stackoverflow.com/questions/48450594/selenium-timed-out-receiving-message-from-renderer?rq=2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;프로젝트에서 셀레늄이 크롬창을 띄우는 옵션 확인 (ts 기준)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;let&lt;/span&gt; driver: WebDriver&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const cOption = new chrome.Options()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cOption.addArguments(&lt;span class=&#34;string&#34;&gt;&amp;quot;--no-sandbox&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.addArguments(&lt;span class=&#34;string&#34;&gt;&amp;quot;--headless&amp;quot;&lt;/span&gt;) // 인터넷창 안띄우는 옵션 추가&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.addArguments(&lt;span class=&#34;string&#34;&gt;&amp;quot;--enable-automation&amp;quot;&lt;/span&gt;) //오토메이션 켜기&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.addArguments(&lt;span class=&#34;string&#34;&gt;&amp;quot;--disable-infobars&amp;quot;&lt;/span&gt;) //비활성화 옵션 추가&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.addArguments(&lt;span class=&#34;string&#34;&gt;&amp;quot;--start-maximized&amp;quot;&lt;/span&gt;) // 창을 최대로 키우기&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.addArguments(&lt;span class=&#34;string&#34;&gt;&amp;quot;--disable-dev-shm-usage&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.addArguments(&lt;span class=&#34;string&#34;&gt;&amp;quot;--single-process&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.addArguments(&lt;span class=&#34;string&#34;&gt;&amp;quot;--incognito&amp;quot;&lt;/span&gt;) //시크릿 모드&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.addArguments(&lt;span class=&#34;string&#34;&gt;&amp;quot;--log-level=off&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.addArguments(&lt;span class=&#34;string&#34;&gt;&amp;quot;--disk-cache-size=zero&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.addArguments(&lt;span class=&#34;string&#34;&gt;&amp;quot;--disable-gpu&amp;quot;&lt;/span&gt;) // 이것 켜기(로컬에서 이 옵션을 킨 채로 가동하면 오류남)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;이후 빌드 후 배포했을 때 정상 가동 되었음을 확인함.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;추가&#34;&gt;&lt;a href=&#34;#추가&#34; class=&#34;headerlink&#34; title=&#34;추가&#34;&gt;&lt;/a&gt;추가&lt;/h3&gt;&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;--headless // 실제로 웹 창을 띄움. 페이지에 따라 돔을 못 읽어오기도 함. 우분투처럼 화면이 없는 OS에 배포할 때 이 옵션을 주석처리하면 DevPorts를 찾을 수 없다면서 오류가 떨어짐(송출할 수 있는 화면이 없기 때문)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;--disable-gpu // gpu 비활성화 로컬 컴퓨터에서 이 옵션을 켜고 가동할 경우 커넥팅할수 없다는 오류가 나타남&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;골머리를 좀 많이 앓았는데 그냥 환경 옵션 추가로 해결되었다.&lt;/p&gt;
&lt;p&gt;ㅡㅡ;; 오류가 좀더 자세했으면 한다. 셀레늄이 문서화가 많이 안 되어있는 듯.&lt;/p&gt;
</content>
        <category term="cluster" />
        <category term="docker" />
        <category term="podman" />
        <category term="pm2" />
        <category term="ubuntu" />
        <category term="selenium" />
        <category term="chrome" />
        <category term="web_crawling" />
        <category term="문제해결" />
        <category term="이슈" />
        <category term="error" />
        <updated>2024-04-12T08:16:08.000Z</updated>
    </entry>
    <entry>
        <id>https://coding-coconut.com/post/cluwf5cih002zi45o7hdxe8kg/</id>
        <title>podman 컨테이너 내부 pm2 강제 종료 현상</title>
        <link rel="alternate" href="https://coding-coconut.com/post/cluwf5cih002zi45o7hdxe8kg/"/>
        <content type="html">&lt;p&gt;podman 컨테이너가 자꾸 강제 종료되길래 컨테이너를 재가동하고 로그를 찍어봤다.&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 컨테이너 가동&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;podman start [컨테이너 명]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 가동중인 컨테이너 확인&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;podman ps&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 컨테이너 내부의 로그를 확인&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;podman &lt;span class=&#34;built_in&#34;&gt;log&lt;/span&gt; [컨테이너 명]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;p&gt;콘솔 확인 결과, 아래의 스택오버플로우 포스트처럼 pm2에서 코드 0 으로 종료된다는 문구가 출력됐다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/58947629/node-js-pm2-log-app-server0-exited-with-code-0-via-signal-sigkill&#34;&gt;https://stackoverflow.com/questions/58947629/node-js-pm2-log-app-server0-exited-with-code-0-via-signal-sigkill&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[RSS]Time 60min Call Complete.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;RSS Timer::60 call complete.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  generation_event: &lt;span class=&#34;string&#34;&gt;&amp;#x27;sitemap&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  origin_commander: &lt;span class=&#34;string&#34;&gt;&amp;#x27;timer&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  is_timer: 30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[Sitemap]Time 30min Call Complete.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Sitemap Timer::30 call complete.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2023-05-18T05:59:41: PM2 &lt;span class=&#34;built_in&#34;&gt;log&lt;/span&gt;: App name:app id:0 disconnected&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2023-05-18T05:59:41: PM2 &lt;span class=&#34;built_in&#34;&gt;log&lt;/span&gt;: App [app:0] exited with code [0] via signal [SIGTERM]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2023-05-18T05:59:41: PM2 error: Error caught &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; calling pidusage&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2023-05-18T05:59:41: PM2 error: Error: ESRCH: no such process, &lt;span class=&#34;built_in&#34;&gt;read&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2023-05-18T05:59:41: PM2 error: Error caught &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; calling pidusage&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2023-05-18T05:59:41: PM2 error: Error: ESRCH: no such process, &lt;span class=&#34;built_in&#34;&gt;read&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2023-05-18T05:59:41: PM2 error: 0 : id unknown&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2023-05-18T05:59:41: PM2 error: Trace: Error: 0 : id unknown&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    at God.logAndGenerateError (/usr/&lt;span class=&#34;built_in&#34;&gt;local&lt;/span&gt;/lib/node_modules/pm2/lib/God/Methods.js:39:12)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    at God.stopProcessId (/usr/&lt;span class=&#34;built_in&#34;&gt;local&lt;/span&gt;/lib/node_modules/pm2/lib/God/ActionMethods.js:289:21)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    at God.deleteProcessId (/usr/&lt;span class=&#34;built_in&#34;&gt;local&lt;/span&gt;/lib/node_modules/pm2/lib/God/ActionMethods.js:366:9)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    at Server.onmessage (/usr/&lt;span class=&#34;built_in&#34;&gt;local&lt;/span&gt;/lib/node_modules/pm2/node_modules/pm2-axon-rpc/lib/server.js:104:6)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    at RepSocket.emit (node:events:513:28)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    at RepSocket.emit (node:domain:489:12)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    at Parser.&amp;lt;anonymous&amp;gt; (/usr/&lt;span class=&#34;built_in&#34;&gt;local&lt;/span&gt;/lib/node_modules/pm2/node_modules/pm2-axon/lib/sockets/rep.js:51:15)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    at Parser.emit (node:events:513:28)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    at Parser.emit (node:domain:489:12)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    at Parser._write (/usr/&lt;span class=&#34;built_in&#34;&gt;local&lt;/span&gt;/lib/node_modules/pm2/node_modules/amp/lib/stream.js:91:16)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    at God.logAndGenerateError (/usr/&lt;span class=&#34;built_in&#34;&gt;local&lt;/span&gt;/lib/node_modules/pm2/lib/God/Methods.js:34:15)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    at /usr/&lt;span class=&#34;built_in&#34;&gt;local&lt;/span&gt;/lib/node_modules/pm2/lib/God/ActionMethods.js:367:30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    at God.stopProcessId (/usr/&lt;span class=&#34;built_in&#34;&gt;local&lt;/span&gt;/lib/node_modules/pm2/lib/God/ActionMethods.js:289:14)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    at God.deleteProcessId (/usr/&lt;span class=&#34;built_in&#34;&gt;local&lt;/span&gt;/lib/node_modules/pm2/lib/God/ActionMethods.js:366:9)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    at Server.onmessage (/usr/&lt;span class=&#34;built_in&#34;&gt;local&lt;/span&gt;/lib/node_modules/pm2/node_modules/pm2-axon-rpc/lib/server.js:104:6)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    at RepSocket.emit (node:events:513:28)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    at RepSocket.emit (node:domain:489:12)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    at Parser.&amp;lt;anonymous&amp;gt; (/usr/&lt;span class=&#34;built_in&#34;&gt;local&lt;/span&gt;/lib/node_modules/pm2/node_modules/pm2-axon/lib/sockets/rep.js:51:15)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    at Parser.emit (node:events:513:28)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    at Parser.emit (node:domain:489:12)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2023-05-18T05:59:41: PM2 &lt;span class=&#34;built_in&#34;&gt;log&lt;/span&gt;: PM2 successfully stopped&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;컨테이너 위에서 돌아가고 있는 프로그램은 Express API 서버였고, 스케쥴러처럼 특정 시간대에 트리거를 하는 로직을 수행하고 있었다.&lt;/p&gt;
&lt;p&gt;동일한 작동 방식으로 짜인 다른 컨테이너도 해당 오류가 일어나지 않았는데 왜 이 컨테이너만 이런 문제가 일어났을까?&lt;/p&gt;
&lt;p&gt;컨테이너의 Express 서버는 AWS의 Lambda를 호출하고 있었는데, 이 Lambda는 파일 생성이라는 다소 무거운 작업을 수행한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;axios 요청에서 타임아웃을 내지 않더라도, 요청 시간이 너무 길어지면 프로세스가 죽은 것임으로 간주하고 pm2가 강제 종료를 수행한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;해당 내역때문에 lamdba의 헤비한 로직을 비동기로 처리하고, 응답을 먼저 돌려주는 방식으로 바꾸었다.&lt;/p&gt;
</content>
        <category term="cluster" />
        <category term="podman" />
        <category term="pm2" />
        <category term="이슈" />
        <category term="문제" />
        <updated>2023-05-19T07:18:52.000Z</updated>
    </entry>
    <entry>
        <id>https://coding-coconut.com/post/cluwf5cii0038i45o74gm8imo/</id>
        <title>pm2와 클러스터화</title>
        <link rel="alternate" href="https://coding-coconut.com/post/cluwf5cii0038i45o74gm8imo/"/>
        <content type="html">&lt;h2 id=&#34;클러스터화-가동-설정-및-디버깅&#34;&gt;&lt;a href=&#34;#클러스터화-가동-설정-및-디버깅&#34; class=&#34;headerlink&#34; title=&#34;클러스터화 가동 설정 및 디버깅&#34;&gt;&lt;/a&gt;클러스터화 가동 설정 및 디버깅&lt;/h2&gt;&lt;p&gt;Node.js의 루트 바로 아래에 있는 인덱스 파일들은 package.json 설정 등을 통하면 멀티스레드로 실행할 수 있다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;package.json 파일 설정과 pm2를 이용하여 별개의 프로그램을 클러스터화 가동한다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;1-pm2-npm-모듈-글로벌-옵션으로-깔기-클러스터-작동-확인을-위한-도구&#34;&gt;&lt;a href=&#34;#1-pm2-npm-모듈-글로벌-옵션으로-깔기-클러스터-작동-확인을-위한-도구&#34; class=&#34;headerlink&#34; title=&#34;1. pm2 npm 모듈 글로벌 옵션으로 깔기(클러스터 작동 확인을 위한 도구)&#34;&gt;&lt;/a&gt;1. pm2 npm 모듈 글로벌 옵션으로 깔기(클러스터 작동 확인을 위한 도구)&lt;/h3&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm install pm2 -g&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;2-클러스터화-파일-작성&#34;&gt;&lt;a href=&#34;#2-클러스터화-파일-작성&#34; class=&#34;headerlink&#34; title=&#34;2. 클러스터화 파일 작성&#34;&gt;&lt;/a&gt;2. 클러스터화 파일 작성&lt;/h3&gt;&lt;p&gt;  각 클러스터의 dev 실행 명령어 지정 및 클러스터화 시동 명령어 지정(package.json)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;package.json 작성 예제. daum/blog/post는 각기 실행할 별개의 index.ts파일이라고 보면 됨.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;scripts&amp;quot;:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;start:cluster&amp;quot;: &amp;quot;pm2-runtime pm2.config.js&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;dev:post&amp;quot;: &amp;quot;nodemon --legacy-watch --watch ./ --exec &amp;#x27;npx&amp;#x27; ts-node -r tsconfig-paths/register ./src/post.ts&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;dev:blog&amp;quot;: &amp;quot;nodemon --legacy-watch --watch ./ --exec &amp;#x27;npx&amp;#x27; ts-node -r tsconfig-paths/register ./src/blog.ts&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;dev:daum&amp;quot;: &amp;quot;nodemon --legacy-watch --watch ./ --exec &amp;#x27;npx&amp;#x27; ts-node -r tsconfig-paths/register ./src/daum.ts&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;dev&amp;quot;: &amp;quot;npm run dev:blog &amp;amp; npm run dev:daum &amp;amp; npm run dev:post&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;build&amp;quot;: &amp;quot;tsc -p tsconfig.json &amp;amp;&amp;amp; tsc-alias&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;pm2.config.js 작성 예제. 클러스터화를 할 설정파일들을 지정한다. 인스턴스 갯수만큼 생성이 됨.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;module&lt;/span&gt;.exports=&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    apps:[&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;post&amp;quot;&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;script&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;./dist/post.js&amp;quot;&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;instances&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;exec_mode&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;cluster&amp;quot;&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;blog&amp;quot;&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;script&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;./dist/blog.js&amp;quot;&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;instances&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;exec_mode&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;cluster&amp;quot;&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;daum&amp;quot;&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;script&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;./dist/daum.js&amp;quot;&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;instances&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;exec_mode&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;cluster&amp;quot;&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;3-빌드하기&#34;&gt;&lt;a href=&#34;#3-빌드하기&#34; class=&#34;headerlink&#34; title=&#34;3. 빌드하기&#34;&gt;&lt;/a&gt;3. 빌드하기&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;타입스크립트 파일들이 js로 빌드된다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm run build&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;4-클러스터-가동&#34;&gt;&lt;a href=&#34;#4-클러스터-가동&#34; class=&#34;headerlink&#34; title=&#34;4. 클러스터 가동&#34;&gt;&lt;/a&gt;4. 클러스터 가동&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;package.json에서 선제 명령어 설정을 해줘야 함&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm run start:cluster&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;5-이후-디버깅은-pm2-에서-할-수-있음&#34;&gt;&lt;a href=&#34;#5-이후-디버깅은-pm2-에서-할-수-있음&#34; class=&#34;headerlink&#34; title=&#34;5. 이후 디버깅은 pm2 에서 할 수 있음&#34;&gt;&lt;/a&gt;5. 이후 디버깅은 pm2 에서 할 수 있음&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;가동되고 있는 클러스터 확인&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pm2 list&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;클러스터 상세내역 확인(방향키로 조정)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pm2 monit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;클러스터 가동 취소&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;npm run start:cluster 명령어를 쳤던 커맨드창 ctrl+c &lt;/p&gt;
&lt;p&gt;이렇게 취소하면 pm2 list 했을 때 생성되었던 클러스터들이 사라진 것을 볼 수 있다.&lt;/p&gt;
</content>
        <category term="pm2" />
        <updated>2022-05-20T07:51:12.000Z</updated>
    </entry>
</feed>
