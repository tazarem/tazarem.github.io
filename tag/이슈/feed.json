{
    "version": "https://jsonfeed.org/version/1",
    "title": "Coding Coconut • All posts by \"이슈\" tag",
    "description": "주니어 웹 프론트엔드/백엔드 개발자. \\n  공부하는 것도, 노는 것도 그만큼 좋아합니다. \\n 현 직장에서는 AWS Lambda 와 Typscript 를 접목한 서드파티 모듈 개발을 하고 있습니다.",
    "home_page_url": "https://coding-coconut.com",
    "items": [
        {
            "id": "https://coding-coconut.com/post/cluwfj5n10001wc5o1tpd8c5d/",
            "url": "https://coding-coconut.com/post/cluwfj5n10001wc5o1tpd8c5d/",
            "title": "Docker 또는 Podman Container에서의 Selenium 웹 크롤링 Timed out 오류",
            "date_published": "2024-04-12T08:16:08.000Z",
            "content_html": "<p>이전에 selenium 프로젝트를 했다고 안일했었는지 크롤링 프로젝트를 만들고 배포하자마자 오류가 났다.</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Timed out receiving message from renderer: 600.000</span><br></pre></td></tr></table></figure>\n<p>원인이 뭔지 도통 모르겠어서 이것저것 찾아봤는데 결국 해결하긴 했음.</p>\n<h3 id=\"오류-고치는-과정\"><a href=\"#오류-고치는-과정\" class=\"headerlink\" title=\"오류 고치는 과정\"></a>오류 고치는 과정</h3><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Ubuntu 20.04 LTS</span></span><br><span class=\"line\"><span class=\"comment\">// Podman Container Build</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 프로젝트 이미지 생성용 Dockerfile</span></span><br><span class=\"line\">FROM selenium/node-chrome:<span class=\"number\">123.0</span><span class=\"number\">.6312</span><span class=\"number\">.86</span>-chromedriver-<span class=\"number\">123.0</span><span class=\"number\">.6312</span><span class=\"number\">.86</span>-<span class=\"number\">20240402</span></span><br><span class=\"line\">(이후 Node.js 설치 과정)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 프로젝트 가동 후 셀레늄이 크롬을 띄우는 타이밍에서 타임아웃 메시지 확인</span></span><br><span class=\"line\">Timed out receiving message <span class=\"keyword\">from</span> renderer: <span class=\"number\">600.000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 혹여 버전이 서로 안맞나 싶어서 컨테이너 내부 sh명령어로 버전 확인</span></span><br><span class=\"line\">podman exec -it [프로젝트명] sh</span><br><span class=\"line\"></span><br><span class=\"line\">google-chrome --version</span><br><span class=\"line\">&gt; Google Chrome <span class=\"number\">123.0</span><span class=\"number\">.6312</span><span class=\"number\">.86</span> </span><br><span class=\"line\"></span><br><span class=\"line\">chromedriver --version</span><br><span class=\"line\">&gt; ChromeDriver <span class=\"number\">123.0</span><span class=\"number\">.6312</span><span class=\"number\">.86</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 버전도 맞고 컨테이너 내부에 구글 크롬이 안 깔린것도 아님을 확인</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 구글에 에러 검색/스택오버플로우 탐색. 아래 포스트는 오류 해결에 결정적이었다.</span></span><br><span class=\"line\"><span class=\"string\">&quot;https://stackoverflow.com/questions/48450594/selenium-timed-out-receiving-message-from-renderer?rq=2&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 프로젝트에서 셀레늄이 크롬창을 띄우는 옵션 확인 (ts 기준)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> driver: WebDriver</span><br><span class=\"line\"><span class=\"keyword\">const</span> cOption = <span class=\"keyword\">new</span> chrome.Options()</span><br><span class=\"line\">cOption.addArguments(<span class=\"string\">&quot;--no-sandbox&quot;</span>)</span><br><span class=\"line\">.addArguments(<span class=\"string\">&quot;--headless&quot;</span>) <span class=\"comment\">// 인터넷창 안띄우는 옵션 추가</span></span><br><span class=\"line\">.addArguments(<span class=\"string\">&quot;--enable-automation&quot;</span>) <span class=\"comment\">//오토메이션 켜기</span></span><br><span class=\"line\">.addArguments(<span class=\"string\">&quot;--disable-infobars&quot;</span>) <span class=\"comment\">//비활성화 옵션 추가</span></span><br><span class=\"line\">.addArguments(<span class=\"string\">&quot;--start-maximized&quot;</span>) <span class=\"comment\">// 창을 최대로 키우기</span></span><br><span class=\"line\">.addArguments(<span class=\"string\">&quot;--disable-dev-shm-usage&quot;</span>)</span><br><span class=\"line\">.addArguments(<span class=\"string\">&quot;--single-process&quot;</span>)</span><br><span class=\"line\">.addArguments(<span class=\"string\">&quot;--incognito&quot;</span>) <span class=\"comment\">//시크릿 모드</span></span><br><span class=\"line\">.addArguments(<span class=\"string\">&quot;--log-level=off&quot;</span>)</span><br><span class=\"line\">.addArguments(<span class=\"string\">&quot;--disk-cache-size=zero&quot;</span>)</span><br><span class=\"line\">.addArguments(<span class=\"string\">&quot;--disable-gpu&quot;</span>) <span class=\"comment\">// 이것 켜기(로컬에서 이 옵션을 킨 채로 가동하면 오류남)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 이후 빌드 후 배포했을 때 정상 가동 되었음을 확인함.</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"추가\"><a href=\"#추가\" class=\"headerlink\" title=\"추가\"></a>추가</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--headless // 실제로 웹 창을 띄움. 페이지에 따라 돔을 못 읽어오기도 함. 우분투처럼 화면이 없는 OS에 배포할 때 이 옵션을 주석처리하면 DevPorts를 찾을 수 없다면서 오류가 떨어짐(송출할 수 있는 화면이 없기 때문)</span><br><span class=\"line\">--disable-gpu // gpu 비활성화 로컬 컴퓨터에서 이 옵션을 켜고 가동할 경우 커넥팅할수 없다는 오류가 나타남</span><br></pre></td></tr></table></figure>\n\n<p>골머리를 좀 많이 앓았는데 그냥 환경 옵션 추가로 해결되었다.</p>\n<p>ㅡㅡ;; 오류가 좀더 자세했으면 한다. 셀레늄이 문서화가 많이 안 되어있는 듯.</p>\n",
            "tags": [
                "cluster",
                "docker",
                "podman",
                "pm2",
                "ubuntu",
                "selenium",
                "chrome",
                "web_crawling",
                "문제해결",
                "이슈",
                "error"
            ]
        },
        {
            "id": "https://coding-coconut.com/post/cluwfj5nc000vwc5o5bce5jdi/",
            "url": "https://coding-coconut.com/post/cluwfj5nc000vwc5o5bce5jdi/",
            "title": "podman 컨테이너 내부 pm2 강제 종료 현상",
            "date_published": "2023-05-19T07:18:52.000Z",
            "content_html": "<p>podman 컨테이너가 자꾸 강제 종료되길래 컨테이너를 재가동하고 로그를 찍어봤다.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 컨테이너 가동</span></span><br><span class=\"line\">podman start [컨테이너 명]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 가동중인 컨테이너 확인</span></span><br><span class=\"line\">podman ps</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 컨테이너 내부의 로그를 확인</span></span><br><span class=\"line\">podman <span class=\"built_in\">log</span> [컨테이너 명]</span><br></pre></td></tr></table></figure>\n\n\n<p>콘솔 확인 결과, 아래의 스택오버플로우 포스트처럼 pm2에서 코드 0 으로 종료된다는 문구가 출력됐다.</p>\n<p><a href=\"https://stackoverflow.com/questions/58947629/node-js-pm2-log-app-server0-exited-with-code-0-via-signal-sigkill\">https://stackoverflow.com/questions/58947629/node-js-pm2-log-app-server0-exited-with-code-0-via-signal-sigkill</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[RSS]Time 60min Call Complete.</span><br><span class=\"line\">RSS Timer::60 call complete.</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  generation_event: <span class=\"string\">&#x27;sitemap&#x27;</span>,</span><br><span class=\"line\">  origin_commander: <span class=\"string\">&#x27;timer&#x27;</span>,</span><br><span class=\"line\">  is_timer: 30</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">[Sitemap]Time 30min Call Complete.</span><br><span class=\"line\">Sitemap Timer::30 call complete.</span><br><span class=\"line\">2023-05-18T05:59:41: PM2 <span class=\"built_in\">log</span>: App name:app id:0 disconnected</span><br><span class=\"line\">2023-05-18T05:59:41: PM2 <span class=\"built_in\">log</span>: App [app:0] exited with code [0] via signal [SIGTERM]</span><br><span class=\"line\">2023-05-18T05:59:41: PM2 error: Error caught <span class=\"keyword\">while</span> calling pidusage</span><br><span class=\"line\">2023-05-18T05:59:41: PM2 error: Error: ESRCH: no such process, <span class=\"built_in\">read</span></span><br><span class=\"line\">2023-05-18T05:59:41: PM2 error: Error caught <span class=\"keyword\">while</span> calling pidusage</span><br><span class=\"line\">2023-05-18T05:59:41: PM2 error: Error: ESRCH: no such process, <span class=\"built_in\">read</span></span><br><span class=\"line\">2023-05-18T05:59:41: PM2 error: 0 : id unknown</span><br><span class=\"line\">2023-05-18T05:59:41: PM2 error: Trace: Error: 0 : id unknown</span><br><span class=\"line\">    at God.logAndGenerateError (/usr/<span class=\"built_in\">local</span>/lib/node_modules/pm2/lib/God/Methods.js:39:12)</span><br><span class=\"line\">    at God.stopProcessId (/usr/<span class=\"built_in\">local</span>/lib/node_modules/pm2/lib/God/ActionMethods.js:289:21)</span><br><span class=\"line\">    at God.deleteProcessId (/usr/<span class=\"built_in\">local</span>/lib/node_modules/pm2/lib/God/ActionMethods.js:366:9)</span><br><span class=\"line\">    at Server.onmessage (/usr/<span class=\"built_in\">local</span>/lib/node_modules/pm2/node_modules/pm2-axon-rpc/lib/server.js:104:6)</span><br><span class=\"line\">    at RepSocket.emit (node:events:513:28)</span><br><span class=\"line\">    at RepSocket.emit (node:domain:489:12)</span><br><span class=\"line\">    at Parser.&lt;anonymous&gt; (/usr/<span class=\"built_in\">local</span>/lib/node_modules/pm2/node_modules/pm2-axon/lib/sockets/rep.js:51:15)</span><br><span class=\"line\">    at Parser.emit (node:events:513:28)</span><br><span class=\"line\">    at Parser.emit (node:domain:489:12)</span><br><span class=\"line\">    at Parser._write (/usr/<span class=\"built_in\">local</span>/lib/node_modules/pm2/node_modules/amp/lib/stream.js:91:16)</span><br><span class=\"line\">    at God.logAndGenerateError (/usr/<span class=\"built_in\">local</span>/lib/node_modules/pm2/lib/God/Methods.js:34:15)</span><br><span class=\"line\">    at /usr/<span class=\"built_in\">local</span>/lib/node_modules/pm2/lib/God/ActionMethods.js:367:30</span><br><span class=\"line\">    at God.stopProcessId (/usr/<span class=\"built_in\">local</span>/lib/node_modules/pm2/lib/God/ActionMethods.js:289:14)</span><br><span class=\"line\">    at God.deleteProcessId (/usr/<span class=\"built_in\">local</span>/lib/node_modules/pm2/lib/God/ActionMethods.js:366:9)</span><br><span class=\"line\">    at Server.onmessage (/usr/<span class=\"built_in\">local</span>/lib/node_modules/pm2/node_modules/pm2-axon-rpc/lib/server.js:104:6)</span><br><span class=\"line\">    at RepSocket.emit (node:events:513:28)</span><br><span class=\"line\">    at RepSocket.emit (node:domain:489:12)</span><br><span class=\"line\">    at Parser.&lt;anonymous&gt; (/usr/<span class=\"built_in\">local</span>/lib/node_modules/pm2/node_modules/pm2-axon/lib/sockets/rep.js:51:15)</span><br><span class=\"line\">    at Parser.emit (node:events:513:28)</span><br><span class=\"line\">    at Parser.emit (node:domain:489:12)</span><br><span class=\"line\">2023-05-18T05:59:41: PM2 <span class=\"built_in\">log</span>: PM2 successfully stopped</span><br></pre></td></tr></table></figure>\n\n<p>컨테이너 위에서 돌아가고 있는 프로그램은 Express API 서버였고, 스케쥴러처럼 특정 시간대에 트리거를 하는 로직을 수행하고 있었다.</p>\n<p>동일한 작동 방식으로 짜인 다른 컨테이너도 해당 오류가 일어나지 않았는데 왜 이 컨테이너만 이런 문제가 일어났을까?</p>\n<p>컨테이너의 Express 서버는 AWS의 Lambda를 호출하고 있었는데, 이 Lambda는 파일 생성이라는 다소 무거운 작업을 수행한다.</p>\n<ul>\n<li>axios 요청에서 타임아웃을 내지 않더라도, 요청 시간이 너무 길어지면 프로세스가 죽은 것임으로 간주하고 pm2가 강제 종료를 수행한다.</li>\n</ul>\n<p>해당 내역때문에 lamdba의 헤비한 로직을 비동기로 처리하고, 응답을 먼저 돌려주는 방식으로 바꾸었다.</p>\n",
            "tags": [
                "cluster",
                "podman",
                "pm2",
                "이슈",
                "문제"
            ]
        }
    ]
}