{
    "version": "https://jsonfeed.org/version/1",
    "title": "Coding Coconut • All posts by \"ssh\" tag",
    "description": "주니어 웹 프론트엔드/백엔드 개발자. 공부하는 것도, 노는 것도 그만큼 좋아합니다. 덕질 없으면 어떻게 살아? ",
    "home_page_url": "https://coding-coconut.com",
    "items": [
        {
            "id": "https://coding-coconut.com/post/cl7a3uv0s000ifr5ocniv22mv/",
            "url": "https://coding-coconut.com/post/cl7a3uv0s000ifr5ocniv22mv/",
            "title": "SSH키로 로그인하는 법",
            "date_published": "2022-05-20T08:44:10.000Z",
            "content_html": "<h2 id=\"SSH키로-로그인하는-법\"><a href=\"#SSH키로-로그인하는-법\" class=\"headerlink\" title=\"SSH키로 로그인하는 법\"></a>SSH키로 로그인하는 법</h2><h3 id=\"SSH-키-생성하기\"><a href=\"#SSH-키-생성하기\" class=\"headerlink\" title=\"SSH 키 생성하기\"></a>SSH 키 생성하기</h3><p>깃허브나 벌쳐 인증서버/원격 데이터베이스에 접속할 때 키로그인을 필요로 하기도 한다.</p>\n<blockquote>\n<p>키 생성하기</p>\n</blockquote>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen</span><br></pre></td></tr></table></figure>\n<p>모든 설정 기본값으로 하면 내 컴퓨터/사용자 폴더/.ssh폴더(숨겨진 폴더)안에 다음처럼 rsa 키가 생성된다.</p>\n<ul>\n<li>id_rsa</li>\n<li>id_rsa.pub</li>\n</ul>\n<h3 id=\"키-파일-등록\"><a href=\"#키-파일-등록\" class=\"headerlink\" title=\"키 파일 등록\"></a>키 파일 등록</h3><p>ssh 를 이용해서 로그인하려면 이전 과정에서 생성된 두가지 키가 필요하다.</p>\n<ul>\n<li>id_rsa (클라이언트 피시가 가지고 있을 프라이빗 키. 이걸로 로그인함!)</li>\n<li>id_rsa.pub (호스트에 등록할 퍼블릭 키. 긁어서 호스트에 등록해야한다.)</li>\n</ul>\n<p>id_rsa는 다른 이름이거나 확장자가 <code>.ppk</code> 또는 <code>.pem</code>일 수 있다.</p>\n<blockquote>\n<p>.ssh 안에 프라이빗 키를 집어넣고, 퍼블릭 키는 파일을 열어 내부를 긁어서 호스트에 등록한다.</p>\n</blockquote>\n<h3 id=\"SSH-원격-접속-Config-파일-작성\"><a href=\"#SSH-원격-접속-Config-파일-작성\" class=\"headerlink\" title=\"SSH 원격 접속 Config 파일 작성\"></a>SSH 원격 접속 Config 파일 작성</h3><blockquote>\n<p>터미널 원격 ssh 접속 시 간편 커맨드를 위한 .ssh/config 파일을 설정한다.</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Host [ConnectionName]</span><br><span class=\"line\">\tHostName [HostIP]</span><br><span class=\"line\">\tUser [HostLoginID]</span><br><span class=\"line\">\tIdentityFile ~/.ssh/[YOUR_PRIVATE_KEY_FILE]</span><br></pre></td></tr></table></figure>\n\n<p>위처럼 만들어 저장해 놓으면</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh [ConnectionName]</span><br></pre></td></tr></table></figure>\n<p>으로 간편하게 접속할 수 있다.</p>\n<p>키 파일 위치만 올바르다면 별도의 패스워드를 요구하진 않는다.</p>\n<h3 id=\"기타-파일변환\"><a href=\"#기타-파일변환\" class=\"headerlink\" title=\"기타 파일변환\"></a>기타 파일변환</h3><blockquote>\n<p>putty .ppk파일을 제네릭한 .pem으로 변환(윈도즈 putty가 있으면 ppk 그대로 사용해도됨)</p>\n</blockquote>\n<ul>\n<li>Mac 인 경우(선제 homebrew 설치 필요)<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install putty </span><br><span class=\"line\">puttygen 원본.ppk -O private-openssh -o 내보낼.pem</span><br></pre></td></tr></table></figure></li>\n<li>Windows인 경우 putty-keygen exe를 이용한다.</li>\n</ul>\n",
            "tags": [
                "ssh",
                "terminal",
                "cmd",
                "bash"
            ]
        }
    ]
}