<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Coding Coconut</title>
        <link>https://coding-coconut.com</link>
        <description>주니어 웹 프론트엔드/백엔드 개발자. \n  공부하는 것도, 노는 것도 그만큼 좋아합니다. \n 현 직장에서는 AWS Lambda 와 Typscript 를 접목한 서드파티 모듈 개발을 하고 있습니다.</description>
        <language>ko</language>
        <pubDate>Wed, 26 Apr 2023 17:25:10 +0900</pubDate>
        <lastBuildDate>Wed, 26 Apr 2023 17:25:10 +0900</lastBuildDate>
        <category>certbot</category>
        <category>aws</category>
        <category>배포</category>
        <category>dns</category>
        <category>github_page</category>
        <category>domain</category>
        <category>hexo</category>
        <category>error</category>
        <category>docker</category>
        <category>issue</category>
        <category>custom_domain</category>
        <category>hexo_deploy</category>
        <category>ssh</category>
        <category>terminal</category>
        <category>cmd</category>
        <category>bash</category>
        <category>https</category>
        <category>인증서</category>
        <category>apache</category>
        <category>pm2</category>
        <category>ubuntu</category>
        <category>podman</category>
        <category>dontstarve</category>
        <category>modding</category>
        <category>스크랩</category>
        <category>잡담</category>
        <category>비동기</category>
        <category>asyncawait</category>
        <category>postman</category>
        <category>속도 개선</category>
        <item>
            <guid>clgyf00n8000u685ogeyncd1f</guid>
            <title>Ubuntu 20.10 이하 버전에서 podman 설치하기</title>
            <link>https://coding-coconut.com/post/clgyf00n8000u685ogeyncd1f/</link>
            <category>ubuntu</category>
            <category>podman</category>
            <pubDate>Wed, 26 Apr 2023 17:25:10 +0900</pubDate>
            <description>
                ubuntu 20.10 이하 버전에서 podman 설치하기 AWS EC2 Ubuntu 20.04 LTS 에 설치하였다. 1. 쿠빅 리포지토리 추가 1sudo sh -c &amp;quot;echo &amp;#x27;deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_20.04/ /&amp;#x27; &amp;gt; /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list&amp;quot;  입력하고 커맨드해도...
            </description>
        </item>
        <item>
            <guid>clgyf00n30003685o4sig54cs</guid>
            <title>EC2에 도메인 바인딩하기</title>
            <link>https://coding-coconut.com/post/clgyf00n30003685o4sig54cs/</link>
            <category>aws</category>
            <category>배포</category>
            <pubDate>Wed, 19 Apr 2023 11:41:06 +0900</pubDate>
            <description>
                도메인-로드밸런서-대상그룹-보안규칙-EC2 설정하기  도메인 접근 -&amp;gt; 내부 포트 접근80|443 -&amp;gt; 8102   접근 가능 VPC 일치에 주의   EC2인스턴스에 보안그룹 추가하여 포트번호 뜷기 (예: 8102) 대상그룹의 포트를 EC2인스턴스의 포트번호와 일치시키기 인스턴스:8102 대상그룹:8102(HTTP) 생성한 대상그룹에 대상 등록으로 EC2인스턴스 바인딩 대상그룹에 등록된 EC2인스턴스의 헬스체크를 기다리기 로드밸런서 생성하기 가용 영역 선택, 생성과정 중 만들어놓은 대상그룹 바인딩시키기 보안그룹은 웹 전용...
            </description>
        </item>
        <item>
            <guid>clgyf00n9000w685o4fdudfqu</guid>
            <title>굶지마 캐릭터 모드 만드는 과정 정리</title>
            <link>https://coding-coconut.com/post/clgyf00n9000w685o4fdudfqu/</link>
            <category>dontstarve</category>
            <category>modding</category>
            <pubDate>Sun, 15 Jan 2023 16:19:15 +0900</pubDate>
            <description>
                굶지마 캐릭터 모드 만드는 과정 정리  참조 : 클레이 포럼 모딩 종합 튜토리얼  1.캐릭터 샘플 다운받기 굶지마 캐릭터 빌드 템플릿을 다운받아 준다.  Deowolf의 extended character template 다운로드 받기   깃허브 굶지마 포럼  둘 다 동일한 파일이니 버전만 잘 확인하면 된다. 굶지마 포럼의 경우 다운받는데 클레이 로그인이 필요할 수 있다. 포럼에는 튜토리얼 영상도 있으니 참조.   2.vsCode 또는 Notepad++로 이름 바꾸기(대소문자 구분)  vsCode Notepad++   다운받은 프로젝...
            </description>
        </item>
        <item>
            <guid>clgyf00n50008685ohw7u38oi</guid>
            <title>Hexo tag 영문태그 대소문자 수정 시 반영되지 않는 오류</title>
            <link>https://coding-coconut.com/post/clgyf00n50008685ohw7u38oi/</link>
            <category>hexo</category>
            <category>error</category>
            <pubDate>Thu, 25 Aug 2022 12:35:55 +0900</pubDate>
            <description>
                태그 영문 대소문자를 수정했을 때 링크 오류가 발생했다 원인은 github에서 영문대소문자 수정 시 커밋사항에 반영되지 않기 때문이다.태그를 아예 다른 문자로 수정하고 hexo deploy 로 재배포하면 된다. 참조 링크https://github.com/hexojs/hexo/issues/2600 ...
            </description>
        </item>
        <item>
            <guid>clgyf00n8000o685oa5yvbh37</guid>
            <title>Linux 서버에서 https 인증과 Apache2 프록시패스 설정하기</title>
            <link>https://coding-coconut.com/post/clgyf00n8000o685oa5yvbh37/</link>
            <category>certbot</category>
            <category>배포</category>
            <category>https</category>
            <category>인증서</category>
            <category>apache</category>
            <pubDate>Wed, 24 Aug 2022 18:14:09 +0900</pubDate>
            <description>
                들어가며 인증서 발급방법은 기존에 알고있어서 문제가 되지 않았는데 아파치 설정파일 만지는 법을 까먹어서 한동안 설정파일과 씨름했다.. -.-;;로그인한 유저가 관리자 권한일 경우 굳이 sudo를 입력하지 않아도 된다! 0. apache2 를 깔려면 apt를 사용해야 하므로 업데이트가 필요 1sudo apt update  1. linux 전용 apache2 설치 1sudo apt install apache2  2. 000-default.conf 편집 위치는 리눅스 우분투 서버18 기준 맨~ 위 디렉토리 /etc/apache2/site...
            </description>
        </item>
        <item>
            <guid>clgyf00n6000d685o7y8x5pdc</guid>
            <title>Hexo 배포 커맨드와 커스텀 도메인에 관한 이슈</title>
            <link>https://coding-coconut.com/post/clgyf00n6000d685o7y8x5pdc/</link>
            <category>배포</category>
            <category>github_page</category>
            <category>hexo</category>
            <category>issue</category>
            <category>custom_domain</category>
            <category>hexo_deploy</category>
            <pubDate>Thu, 28 Jul 2022 09:56:12 +0900</pubDate>
            <description>
                문제점  기존 도메인에서 블로그 전용 도메인을 구매하고, 깃허브 페이지에 연결해 놓았었는데Hexo로 만든 블로그 프로젝트에서 hexo deploy 커맨드를 이용해 배포하면깃허브 페이지의 퍼블리싱된 커스텀 도메인이 초기화가 되는 이슈가 발생했다. 해결 이를 해결하려면 hexo 의 블로그 프로젝트 source 폴더에CNAME 파일을 생성하고, 안에 퍼블리싱할 커스텀 도메인을 입력한다.  이후 hexo deploy 커맨드를 입력하여 배포해도 깃허브 페이지의 커스텀 도메인이 해제되지 않는다. ...
            </description>
        </item>
        <item>
            <guid>clgyf00n40007685o4bpf129j</guid>
            <title>Github Page에 커스텀 도메인 연결하기</title>
            <link>https://coding-coconut.com/post/clgyf00n40007685o4bpf129j/</link>
            <category>dns</category>
            <category>github_page</category>
            <category>domain</category>
            <pubDate>Thu, 21 Jul 2022 17:20:52 +0900</pubDate>
            <description>
                Github Page에 커스텀 도메인 연결하기 방법은 다음과 같다. 도메인을 구입한 사이트에서 깃허브 리포지토리 주소를 CNAME으로 추가 또는 변경해주기 도메인을 구입한 사이트에서 있어야 할 레코드는 다음과 같다.    레코드명 이름 데이터    CNAME www [yourRepo].github.io   A @ 185.199.108.153   A @ 185.199.109.153   A @ 185.199.110.153   A @ 185.199.111.153   네임서버는 따로 이관하지 않아도 된다. 블로그로 서비스되고있는 깃허브 페...
            </description>
        </item>
        <item>
            <guid>clgyf00n6000h685o7zpxa950</guid>
            <title>Hexo 테마 만들기</title>
            <link>https://coding-coconut.com/post/clgyf00n6000h685o7zpxa950/</link>
            <category>hexo</category>
            <pubDate>Fri, 10 Jun 2022 17:03:21 +0900</pubDate>
            <description>
                Hexo 테마 구축하기 들어가며 Hexo 에서 기본적으로 제공하는 기본값 레이아웃 icarus의 소스가 많이 도움이 되었다.Hexo 는 블로그 ‘프레임워크’ 이며, 공식 문서에서는 helper라는 이름으로 렌더링 스크립트도 제공한다. 용어가 생소해서 많이 헤맸던 기억이 난다.헬퍼에서 제공하는 스크립트는 서버사이드 혹은 클라이언트 사이드 렌더링처럼 뷰 엔진 파일 위에서 사용할 수 있다. 해외에서 안내하는 방법대로 테마를 만들어보고, 정리해보고자 이렇게 게시물을 작성하게 되었다. 목차  테마 폴더 만들기 layout 파일 만들기 기본 ...
            </description>
        </item>
        <item>
            <guid>clgyf00n7000m685of33c30xn</guid>
            <title>SSH키로 로그인하는 법</title>
            <link>https://coding-coconut.com/post/clgyf00n7000m685of33c30xn/</link>
            <category>ssh</category>
            <category>terminal</category>
            <category>cmd</category>
            <category>bash</category>
            <pubDate>Fri, 20 May 2022 17:44:10 +0900</pubDate>
            <description>
                SSH키로 로그인하는 법 SSH 키 생성하기 깃허브나 벌쳐 인증서버/원격 데이터베이스에 접속할 때 키로그인을 필요로 하기도 한다.  키 생성하기  1ssh-keygen 모든 설정 기본값으로 하면 내 컴퓨터/사용자 폴더/.ssh폴더(숨겨진 폴더)안에 다음처럼 rsa 키가 생성된다.  id_rsa id_rsa.pub  키 파일 등록 ssh 를 이용해서 로그인하려면 이전 과정에서 생성된 두가지 키가 필요하다.  id_rsa (클라이언트 피시가 가지고 있을 프라이빗 키. 이걸로 로그인함!) id_rsa.pub (호스트에 등록할 퍼블릭 키....
            </description>
        </item>
        <item>
            <guid>clgyf00n8000t685ocpdu5c6i</guid>
            <title>pm2와 클러스터화</title>
            <link>https://coding-coconut.com/post/clgyf00n8000t685ocpdu5c6i/</link>
            <category>pm2</category>
            <pubDate>Fri, 20 May 2022 16:51:12 +0900</pubDate>
            <description>
                클러스터화 가동 설정 및 디버깅 Node.js의 루트 바로 아래에 있는 인덱스 파일들은 package.json 설정 등을 통하면 멀티스레드로 실행할 수 있다.  package.json 파일 설정과 pm2를 이용하여 별개의 프로그램을 클러스터화 가동한다.  1. pm2 npm 모듈 글로벌 옵션으로 깔기(클러스터 작동 확인을 위한 도구) 1npm install pm2 -g  2. 클러스터화 파일 작성   각 클러스터의 dev 실행 명령어 지정 및 클러스터화 시동 명령어 지정(package.json)  package.json 작성 예제....
            </description>
        </item>
        <item>
            <guid>clgyf00nf003i685o0cbk8ar2</guid>
            <title>함수의 비동기화와 async 키워드</title>
            <link>https://coding-coconut.com/post/clgyf00nf003i685o0cbk8ar2/</link>
            <category>비동기</category>
            <category>asyncawait</category>
            <category>postman</category>
            <category>속도 개선</category>
            <pubDate>Thu, 27 Jan 2022 09:56:15 +0900</pubDate>
            <description>
                함수의 비동기화 기존 async await 를 단순히 비동기를 순차적으로 처리하는 데에만 이용하다가,실무상 비동기로 함수를 처리해야 할 일이 생겼다.  일반적인 자바스크립트 함수  123function ()&amp;#123;    //그냥 함수&amp;#125; 자바스크립트 특성상 비동기 함수의 경우 일반 함수에서 호출 시 실행하라는 오더만 내리고 바로 다음 항목을 진행한다.  비동기를 동기적으로 처리할 때, async await 의 사용법.  12345678910111213141516function somePromiseFunc()&amp;#123; /...
            </description>
        </item>
        <item>
            <guid>clgyf00n90010685odili48j5</guid>
            <title>블로그 새단장</title>
            <link>https://coding-coconut.com/post/clgyf00n90010685odili48j5/</link>
            <category>잡담</category>
            <pubDate>Fri, 21 Jan 2022 16:40:37 +0900</pubDate>
            <description>
                기존 블로그 레이아웃과 테마를 새로 리뉴얼했다!깔끔해서 마음에 든다. 이번에 새 테마를 만들면서, 기존 Hexo 공식 문서를 많이 파악해 보는 시간을 가졌다.조만간 레이아웃 만들기도 정리해서 포스팅할 예정. ...
            </description>
        </item>
        <item>
            <guid>clgyf00n9000z685oco643r66</guid>
            <title>링크 스크랩 및 참고자료</title>
            <link>https://coding-coconut.com/post/clgyf00n9000z685oco643r66/</link>
            <category>스크랩</category>
            <pubDate>Fri, 17 Sep 2021 09:30:08 +0900</pubDate>
            <description>
                리눅스 명령어들 sudo grep -ir &amp;#39;bind-address&amp;#39; /etc/mysql/해당 위치에 원하는 텍스트가 있는 파일을 찾는 명령어 iptables -I INPUT -s 1.1.1.1 -j DROP특정 IP막기  https://thisblogbusy.tistory.com/entry/iptables-특정-IP-막기?category=692140   cat /var/log/apache2/access.log tail access.log접속 기록 확인 nohup npm start &amp;amp;노헙으로 종료가되어도 계속 실...
            </description>
        </item>
        <item>
            <guid>clgyf00n10001685oav5hdb51</guid>
            <title>Certbot으로 https 서브도메인 등록하기</title>
            <link>https://coding-coconut.com/post/clgyf00n10001685oav5hdb51/</link>
            <category>certbot</category>
            <pubDate>Fri, 13 Aug 2021 08:55:12 +0900</pubDate>
            <description>
                시행착오가 좀 많았다. 회사서 홈페이지를 새로 구축했다. 구축하는 김에 구식이었던 정적 호스팅을 버리고.. 서버도 올릴 수 있도록 요즘 클라우드 호스팅으로 갈아탔다! AWS EC2처럼 가상컴퓨터지만.. 클라우드라서 훨씬 가격이 저렴하다.  (사실 써본 입장으로써 AWS는 좀 깡패라는 생각이 든다 가격 측정상…ㅡ,.ㅡ) 클라우드 중 가장 싸다는 Vultr호스팅을 이용하고 싶었으나.. 회원가입할때 1인 1계정 원칙이 있는데, 하필이면 잘 모르는 초짜 고고넛이 회원가입할 때 실수를 해서 락이 걸렸다.  문의 처리는 빨랐지만  Vultr가...
            </description>
        </item>
        <item>
            <guid>clgyf00n6000e685o9oem1x8n</guid>
            <title>Hexo와 API 서버 간의 통신</title>
            <link>https://coding-coconut.com/post/clgyf00n6000e685o9oem1x8n/</link>
            <category>hexo</category>
            <pubDate>Mon, 08 Mar 2021 16:46:45 +0900</pubDate>
            <description>
                Hexo 블로그에 서버 API를 이용하는 덧글 위젯을 직접 만들고 싶다면 참조할 수 있는 포스팅이다.Hexo는 정적 웹 블로그를 빠르게 작성할 수 있도록 하는 데에 주요 목적이 있기 때문에, 쿼리를 통해 데이터를 가져오고 서버통신을 통해 html dom을 렌더링하는 로직에 대한 지원은 그다지 좋지 않다. Hexo 공식 사이트에서 지원하는 플러그인, 또는 Disqus나 Utterances 와 같은 덧글 위젯이 있지만.. 이런 위젯은 커스터마이징이나 데이터 저장 방식이 유연하지 못하다는 게 사실이다. 요약해서 말하자면, 결국 개발자들의...
            </description>
        </item>
        <item>
            <guid>clgyf00n7000i685oe8ui018p</guid>
            <title>Hexo 테마 블로그 적용기</title>
            <link>https://coding-coconut.com/post/clgyf00n7000i685oe8ui018p/</link>
            <category>hexo</category>
            <pubDate>Tue, 09 Feb 2021 12:19:02 +0900</pubDate>
            <description>
                블로그의 첫 게시물은 도커가 장식했지만, 그래도 명색이 헥소로 기껏 만든 블로그인데 적용기를 써보자~다른 블로그를 봐도 헥소 테마 레이아웃을 만드는 방법은 잘 나와있지 않아서, 이왕 하는 김에 테마 만드는 법도 같이 기술하련다.헥소 프레임워크를 좀 만져봤는데, 작동원리는 쪼끔 알겠고 헥소 기반 테마 만드는법을 모르는 사람에게 추천한다. 헥소 공식 사이트에도 만드는 방법이 어렴풋하게나마 나와있으니 참조해도 좋다(그리 자세히 나와있진 않지만..) 1. 레이아웃 폴더 만들기 우선… 블로그 폴더 구조는 다음과 같다.  먼저  프로젝트 루트...
            </description>
        </item>
        <item>
            <guid>clgyf00n50009685o6vo748i9</guid>
            <title>Docker 명령어 정리</title>
            <link>https://coding-coconut.com/post/clgyf00n50009685o6vo748i9/</link>
            <category>hexo</category>
            <category>docker</category>
            <pubDate>Fri, 05 Feb 2021 09:00:04 +0900</pubDate>
            <description>
                 도커를 한번 써 보니 생각보다 서버를 운영하는 데 편리하고 컨테이너 단위 관리가 용이해서, 이를 잊어버리는 일이 없도록 실행부터 가동 중지까지, 방법을 정리하려고 한다. 1. 서버 이미지 만들기 서버 구축 후, 프로젝트 폴더를 Shift + 우클릭하여 cmd(명령 프롬프트 창) 실행 Docker Desktop 이 설치되어있고, 가동시켜서 현재 서비스가 돌아가고 있다는 전제 하에 아래의 명령어를 입력 1docker build -t [생성할 이미지명] .  생성할 이미지명 예시 : ex) MyContainer 온점까지 제대로 입력해야...
            </description>
        </item>
    </channel>
</rss>