<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://coding-coconut.com</id>
    <title>Coding Coconut • Posts by &#34;기타&#34; category</title>
    <link href="https://coding-coconut.com" />
    <updated>2022-07-21T08:20:52.000Z</updated>
    <category term="certbot" />
    <category term="docker" />
    <category term="hexo" />
    <category term="issue" />
    <category term="github_page" />
    <category term="custom_domain" />
    <category term="배포" />
    <category term="hexo_deploy" />
    <category term="https" />
    <category term="인증서" />
    <category term="apache" />
    <category term="dns" />
    <category term="domain" />
    <category term="ssh" />
    <category term="terminal" />
    <category term="cmd" />
    <category term="bash" />
    <category term="스크랩" />
    <category term="pm2" />
    <category term="잡담" />
    <category term="비동기" />
    <category term="asyncawait" />
    <category term="postman" />
    <category term="속도 개선" />
    <entry>
        <id>https://coding-coconut.com/2022/07/21/Github-Page%EC%97%90-%EC%BB%A4%EC%8A%A4%ED%85%80-%EB%8F%84%EB%A9%94%EC%9D%B8-%EC%97%B0%EA%B2%B0%ED%95%98%EA%B8%B0/</id>
        <title>Github Page에 커스텀 도메인 연결하기</title>
        <link rel="alternate" href="https://coding-coconut.com/2022/07/21/Github-Page%EC%97%90-%EC%BB%A4%EC%8A%A4%ED%85%80-%EB%8F%84%EB%A9%94%EC%9D%B8-%EC%97%B0%EA%B2%B0%ED%95%98%EA%B8%B0/"/>
        <content type="html">&lt;h1 id=&#34;Github-Page에-커스텀-도메인-연결하기&#34;&gt;&lt;a href=&#34;#Github-Page에-커스텀-도메인-연결하기&#34; class=&#34;headerlink&#34; title=&#34;Github Page에 커스텀 도메인 연결하기&#34;&gt;&lt;/a&gt;Github Page에 커스텀 도메인 연결하기&lt;/h1&gt;&lt;p&gt;방법은 다음과 같다.&lt;/p&gt;
&lt;h3 id=&#34;도메인을-구입한-사이트에서-깃허브-리포지토리-주소를-CNAME으로-추가-또는-변경해주기&#34;&gt;&lt;a href=&#34;#도메인을-구입한-사이트에서-깃허브-리포지토리-주소를-CNAME으로-추가-또는-변경해주기&#34; class=&#34;headerlink&#34; title=&#34;도메인을 구입한 사이트에서 깃허브 리포지토리 주소를 CNAME으로 추가 또는 변경해주기&#34;&gt;&lt;/a&gt;도메인을 구입한 사이트에서 깃허브 리포지토리 주소를 CNAME으로 추가 또는 변경해주기&lt;/h3&gt;&lt;p&gt;도메인을 구입한 사이트에서 있어야 할 레코드는 다음과 같다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;레코드명&lt;/th&gt;
&lt;th&gt;이름&lt;/th&gt;
&lt;th&gt;데이터&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;CNAME&lt;/td&gt;
&lt;td&gt;www&lt;/td&gt;
&lt;td&gt;[yourRepo].github.io&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;@&lt;/td&gt;
&lt;td&gt;185.199.108.153&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;@&lt;/td&gt;
&lt;td&gt;185.199.109.153&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;@&lt;/td&gt;
&lt;td&gt;185.199.110.153&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;@&lt;/td&gt;
&lt;td&gt;185.199.111.153&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;네임서버는 따로 이관하지 않아도 된다.&lt;/p&gt;
&lt;h3 id=&#34;블로그로-서비스되고있는-깃허브-페이지의-리포지토리-gt-Setting-gt-Page&#34;&gt;&lt;a href=&#34;#블로그로-서비스되고있는-깃허브-페이지의-리포지토리-gt-Setting-gt-Page&#34; class=&#34;headerlink&#34; title=&#34;블로그로 서비스되고있는 깃허브 페이지의 리포지토리 =&amp;gt; Setting =&amp;gt; Page&#34;&gt;&lt;/a&gt;블로그로 서비스되고있는 깃허브 페이지의 리포지토리 =&amp;gt; Setting =&amp;gt; Page&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;/img/postimg/custom_domain.png&#34; alt=&#34;커스텀 도메인&#34;&gt;&lt;/p&gt;
&lt;p&gt;save를 누르면 위에 등록한 DNS정보가 모두 올바를 경우 해당 주소로 퍼블리시되었다는 알람을 띄운다.&lt;/p&gt;
&lt;p&gt;아래 체크박스를 보면 알 수 있지만 GithubPage 특성상 https 옵션을 활성화할 수 있다.&lt;/p&gt;
&lt;p&gt;도메인으로 접속했을 때 깃허브 페이지가 뜨면 성공!&lt;/p&gt;
</content>
        <category term="github_page" />
        <category term="dns" />
        <category term="domain" />
        <updated>2022-07-21T08:20:52.000Z</updated>
    </entry>
    <entry>
        <id>https://coding-coconut.com/2022/01/21/%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%83%88%EB%8B%A8%EC%9E%A5/</id>
        <title>블로그 새단장</title>
        <link rel="alternate" href="https://coding-coconut.com/2022/01/21/%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%83%88%EB%8B%A8%EC%9E%A5/"/>
        <content type="html">&lt;p&gt;기존 블로그 레이아웃과 테마를 새로 리뉴얼했다!&lt;br&gt;깔끔해서 마음에 든다.&lt;/p&gt;
&lt;p&gt;이번에 새 테마를 만들면서, 기존 Hexo 공식 문서를 많이 파악해 보는 시간을 가졌다.&lt;br&gt;조만간 레이아웃 만들기도 정리해서 포스팅할 예정.&lt;/p&gt;
</content>
        <category term="잡담" />
        <updated>2022-01-21T07:40:37.000Z</updated>
    </entry>
    <entry>
        <id>https://coding-coconut.com/2021/09/17/%EB%A7%81%ED%81%AC-%EC%8A%A4%ED%81%AC%EB%9E%A9-%EB%B0%8F-%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C/</id>
        <title>링크 스크랩 및 참고자료</title>
        <link rel="alternate" href="https://coding-coconut.com/2021/09/17/%EB%A7%81%ED%81%AC-%EC%8A%A4%ED%81%AC%EB%9E%A9-%EB%B0%8F-%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C/"/>
        <content type="html">&lt;h3 id=&#34;리눅스-명령어들&#34;&gt;&lt;a href=&#34;#리눅스-명령어들&#34; class=&#34;headerlink&#34; title=&#34;리눅스 명령어들&#34;&gt;&lt;/a&gt;리눅스 명령어들&lt;/h3&gt;&lt;p&gt;&lt;code&gt;sudo grep -ir &amp;#39;bind-address&amp;#39; /etc/mysql/&lt;/code&gt;&lt;br&gt;해당 위치에 원하는 텍스트가 있는 파일을 찾는 명령어&lt;/p&gt;
&lt;p&gt;&lt;code&gt;iptables -I INPUT -s 1.1.1.1 -j DROP&lt;/code&gt;&lt;br&gt;특정 IP막기&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://thisblogbusy.tistory.com/entry/iptables-%ED%8A%B9%EC%A0%95-IP-%EB%A7%89%EA%B8%B0?category=692140&#34;&gt;https://thisblogbusy.tistory.com/entry/iptables-특정-IP-막기?category=692140&lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;cat /var/log/apache2/access.log&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tail access.log&lt;/code&gt;&lt;br&gt;접속 기록 확인&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nohup npm start &amp;amp;&lt;/code&gt;&lt;br&gt;노헙으로 종료가되어도 계속 실행되도록 백그라운드로 npm start실행.&lt;/p&gt;
&lt;h3 id=&#34;https-인증&#34;&gt;&lt;a href=&#34;#https-인증&#34; class=&#34;headerlink&#34; title=&#34;https 인증&#34;&gt;&lt;/a&gt;https 인증&lt;/h3&gt;&lt;p&gt;호스트 서버컴퓨터에 snap 깔고 certbot 깔고&lt;/p&gt;
&lt;p&gt;&lt;code&gt;certbot --apache&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;리버스프록시로 아파치를 설정해뒀다면 아파치 사양으로 certbot이 자동으로 인증서를 설정해줌.&lt;/p&gt;
&lt;h3 id=&#34;ip-접속기록-확인-아파치-이용&#34;&gt;&lt;a href=&#34;#ip-접속기록-확인-아파치-이용&#34; class=&#34;headerlink&#34; title=&#34;ip 접속기록 확인 (아파치 이용)&#34;&gt;&lt;/a&gt;ip 접속기록 확인 (아파치 이용)&lt;/h3&gt;&lt;p&gt;&lt;code&gt;sudo awk &amp;#39;&amp;#123; print $1&amp;#125;&amp;#39; /var/log/apache2/access.log | sort | uniq -c | sort -nr | head -n 10&lt;/code&gt;&lt;br&gt;접속기록 빈도 10위까지 출력&lt;/p&gt;
&lt;h3 id=&#34;ssh-키페어-등록하기&#34;&gt;&lt;a href=&#34;#ssh-키페어-등록하기&#34; class=&#34;headerlink&#34; title=&#34;ssh 키페어 등록하기&#34;&gt;&lt;/a&gt;ssh 키페어 등록하기&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://extrememanual.net/26803&#34;&gt;https://extrememanual.net/26803&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;puttygen 이용, rsa 키페어 생성&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;퍼블릭키와 프라이빗키 저장&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;호스트 서버 들어가서 유저계정 고유 폴더에 .ssh 폴더 만들기&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;mkdir .ssh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vi .ssh/authorized_keys&lt;/code&gt;&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;해당 편집기에 public key 부분을 텍스트 붙여넣기 후 저장&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;드래그앤드롭-라이브러리&#34;&gt;&lt;a href=&#34;#드래그앤드롭-라이브러리&#34; class=&#34;headerlink&#34; title=&#34;드래그앤드롭 라이브러리&#34;&gt;&lt;/a&gt;드래그앤드롭 라이브러리&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://interactjs.io/&#34;&gt;https://interactjs.io/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://web.dev/drag-and-drop/&#34;&gt;https://web.dev/drag-and-drop/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;드래그앤드롭 파일 업로드 및 설명 튜토리얼.&lt;/p&gt;
&lt;h3 id=&#34;Electron-시작하기&#34;&gt;&lt;a href=&#34;#Electron-시작하기&#34; class=&#34;headerlink&#34; title=&#34;Electron 시작하기&#34;&gt;&lt;/a&gt;Electron 시작하기&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://musma.github.io/2019/07/17/electron-getting-started.html&#34;&gt;https://musma.github.io/2019/07/17/electron-getting-started.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Electron을 이용해서 node.js 와 js로 데스크톱 어플리케이션을 만들 수 있다.&lt;/p&gt;
</content>
        <category term="스크랩" />
        <updated>2021-09-17T00:30:08.000Z</updated>
    </entry>
</feed>
