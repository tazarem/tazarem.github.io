<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Coding Coconut • Posts by &#34;기타&#34; category</title>
        <link>https://coding-coconut.com</link>
        <description>주니어 웹 프론트엔드/백엔드 개발자. 공부하는 것도, 노는 것도 그만큼 좋아합니다. 덕질 없으면 어떻게 살아? </description>
        <language>ko</language>
        <pubDate>Wed, 24 Aug 2022 18:14:09 +0900</pubDate>
        <lastBuildDate>Wed, 24 Aug 2022 18:14:09 +0900</lastBuildDate>
        <category>certbot</category>
        <category>docker</category>
        <category>hexo</category>
        <category>dns</category>
        <category>github_page</category>
        <category>domain</category>
        <category>issue</category>
        <category>custom_domain</category>
        <category>배포</category>
        <category>hexo_deploy</category>
        <category>ssh</category>
        <category>terminal</category>
        <category>cmd</category>
        <category>bash</category>
        <category>https</category>
        <category>인증서</category>
        <category>apache</category>
        <category>pm2</category>
        <category>스크랩</category>
        <category>잡담</category>
        <category>비동기</category>
        <category>asyncawait</category>
        <category>postman</category>
        <category>속도 개선</category>
        <item>
            <guid isPermalink="true">https://coding-coconut.com/2022/08/24/linux-%EC%84%9C%EB%B2%84%EC%97%90%EC%84%9C-https-certificate%EC%99%80-Apache2-%ED%94%84%EB%A1%9D%EC%8B%9C%ED%8C%A8%EC%8A%A4-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0/</guid>
            <title>linux 서버에서 https certificate와 Apache2 프록시패스 설정하기</title>
            <link>https://coding-coconut.com/2022/08/24/linux-%EC%84%9C%EB%B2%84%EC%97%90%EC%84%9C-https-certificate%EC%99%80-Apache2-%ED%94%84%EB%A1%9D%EC%8B%9C%ED%8C%A8%EC%8A%A4-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0/</link>
            <category>certbot</category>
            <category>배포</category>
            <category>https</category>
            <category>인증서</category>
            <category>apache</category>
            <pubDate>Wed, 24 Aug 2022 18:14:09 +0900</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;들어가며&#34;&gt;&lt;a href=&#34;#들어가며&#34; class=&#34;headerlink&#34; title=&#34;들어가며&#34;&gt;&lt;/a&gt;들어가며&lt;/h3&gt;&lt;p&gt;인증서 발급방법은 기존에 알고있어서 문제가 되지 않았는데 아파치 설정파일 만지는 법을 까먹어서 한동안 설정파일과 씨름했다.. -.-;;&lt;br&gt;로그인한 유저가 관리자 권한일 경우 굳이 sudo를 입력하지 않아도 된다!&lt;/p&gt;
&lt;h3 id=&#34;0-apache2-를-깔려면-apt를-사용해야-하므로-업데이트가-필요&#34;&gt;&lt;a href=&#34;#0-apache2-를-깔려면-apt를-사용해야-하므로-업데이트가-필요&#34; class=&#34;headerlink&#34; title=&#34;0. apache2 를 깔려면 apt를 사용해야 하므로 업데이트가 필요&#34;&gt;&lt;/a&gt;0. apache2 를 깔려면 apt를 사용해야 하므로 업데이트가 필요&lt;/h3&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo apt update&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;1-linux-전용-apache2-설치&#34;&gt;&lt;a href=&#34;#1-linux-전용-apache2-설치&#34; class=&#34;headerlink&#34; title=&#34;1. linux 전용 apache2 설치&#34;&gt;&lt;/a&gt;1. linux 전용 apache2 설치&lt;/h3&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo apt install apache2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;2-000-default-conf-편집&#34;&gt;&lt;a href=&#34;#2-000-default-conf-편집&#34; class=&#34;headerlink&#34; title=&#34;2. 000-default.conf 편집&#34;&gt;&lt;/a&gt;2. 000-default.conf 편집&lt;/h3&gt;&lt;p&gt;위치는 리눅스 우분투 서버18 기준 맨~ 위 디렉토리 /etc/apache2/site-available/000-default.conf 이다&lt;br&gt;vi 로 편집하거나 (apache2 를 처음 설치하게 되면 기본으로 파일설정 권한이 읽기전용이다 -.-;;;)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;파일 권한 수정(읽기 쓰기 실행 다 허용)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo chmod 777 000-default.conf[혹은 디렉토리]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;000-default.conf 를 아래처럼 편집한 후 저장&lt;br&gt;vi 명령어를 사용해서 즉석으로 편집해도 되고 파일질라같은 ftp 응용프로그램을 이용해서 로컬에서 작성하고 덮어쓰기해도 좋다.&lt;br&gt;vi 명령어일 경우 저장하고 나가기는 esc + :wq!이다&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#LoadModule 구문을 써 줘야 ProxyPass가 작동한다. 이거 미리 설정하면 아래 파일을 실행시키는 스크립트 작성할 필요 x&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LoadModule proxy_module modules/mod_proxy.so&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LoadModule proxy_http_module modules/mod_proxy_http.so&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;VirtualHost *:80&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ServerAdmin webmaster@localhost&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	DocumentRoot /var/www/html&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ServerName yourdomain.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ServerAlias yourdomain.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ProxyRequests Off&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ProxyPreserveHost On&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# 80으로 받으면 아래 주소로 넘긴다. 여기서의 로컬호스트는 apache가 돌아가는 컴퓨터의 로컬호스트.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;#주소창에서 보여지는 주소도 서버네임으로 바뀌어서 보여진다.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	ProxyPass / http://localhost:8080/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	ProxyPassReverse / http://localhost:8080/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ErrorLog &lt;span class=&#34;variable&#34;&gt;$&amp;#123;APACHE_LOG_DIR&amp;#125;&lt;/span&gt;/error.log&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	CustomLog &lt;span class=&#34;variable&#34;&gt;$&amp;#123;APACHE_LOG_DIR&amp;#125;&lt;/span&gt;/access.log combined&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RewriteEngine on&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RewriteCond %&amp;#123;SERVER_NAME&amp;#125; =content-ad-dev.fastview.co.kr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RewriteRule ^ https://%&amp;#123;SERVER_NAME&amp;#125;%&amp;#123;REQUEST_URI&amp;#125; [END,NE,R=permanent]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;3-Apache2-서비스-재가동&#34;&gt;&lt;a href=&#34;#3-Apache2-서비스-재가동&#34; class=&#34;headerlink&#34; title=&#34;3. Apache2 서비스 재가동&#34;&gt;&lt;/a&gt;3. Apache2 서비스 재가동&lt;/h3&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo service apache2 restart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;4-Snap-설치-이미-깔려-있으면-생략&#34;&gt;&lt;a href=&#34;#4-Snap-설치-이미-깔려-있으면-생략&#34; class=&#34;headerlink&#34; title=&#34;4. Snap 설치(이미 깔려 있으면 생략)&#34;&gt;&lt;/a&gt;4. Snap 설치(이미 깔려 있으면 생략)&lt;/h3&gt;&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo snap install core; sudo snap refresh core&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;5-Snap으로-Certbot-설치&#34;&gt;&lt;a href=&#34;#5-Snap으로-Certbot-설치&#34; class=&#34;headerlink&#34; title=&#34;5. Snap으로 Certbot 설치&#34;&gt;&lt;/a&gt;5. Snap으로 Certbot 설치&lt;/h3&gt;&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo snap install --classic certbot&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;6-Apache-사양으로-인증서-발급-apache2-서비스가-가동-중이고-80포트가-뜷려있어야-함&#34;&gt;&lt;a href=&#34;#6-Apache-사양으로-인증서-발급-apache2-서비스가-가동-중이고-80포트가-뜷려있어야-함&#34; class=&#34;headerlink&#34; title=&#34;6. Apache 사양으로 인증서 발급(apache2 서비스가 가동 중이고 80포트가 뜷려있어야 함)&#34;&gt;&lt;/a&gt;6. Apache 사양으로 인증서 발급(apache2 서비스가 가동 중이고 80포트가 뜷려있어야 함)&lt;/h3&gt;&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo certbot --apache&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;머라머라 나오는데 읽어보면 도메인 입력해달라는것과 인증서 만료 시 발송할 이메일좀 설정해달라는 내용&lt;br&gt;그리고.. 뭔가를 보낸다는 내용인데 이 항목은 생략해도 됨&lt;/p&gt;
&lt;p&gt;만약 과정이 꼬여서 000-default.conf를 다시 수정해야 하면, 인증서파일 재설정을 하면 된다.&lt;/p&gt;
&lt;p&gt;인증서가 이미 존재할 때 위 명령어를 입력하면 인증서 목록이 뜨는데 원하는 도메인의 번호를 입력한다.&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1: Attempt to reinstall this existing certificate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;해당 항목을 선택하면 Certbot의 인증서 파일(000-default-le-ssl.conf)이 다시 갱신된다.&lt;/p&gt;
&lt;h3 id=&#34;7-확인&#34;&gt;&lt;a href=&#34;#7-확인&#34; class=&#34;headerlink&#34; title=&#34;7. 확인&#34;&gt;&lt;/a&gt;7. 확인&lt;/h3&gt;&lt;p&gt;웹페이지에 접속해서 자물쇠 표시가 뜨면 성공!&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://coding-coconut.com/2022/07/21/Github-Page%EC%97%90-%EC%BB%A4%EC%8A%A4%ED%85%80-%EB%8F%84%EB%A9%94%EC%9D%B8-%EC%97%B0%EA%B2%B0%ED%95%98%EA%B8%B0/</guid>
            <title>Github Page에 커스텀 도메인 연결하기</title>
            <link>https://coding-coconut.com/2022/07/21/Github-Page%EC%97%90-%EC%BB%A4%EC%8A%A4%ED%85%80-%EB%8F%84%EB%A9%94%EC%9D%B8-%EC%97%B0%EA%B2%B0%ED%95%98%EA%B8%B0/</link>
            <category>dns</category>
            <category>github_page</category>
            <category>domain</category>
            <pubDate>Thu, 21 Jul 2022 17:20:52 +0900</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;Github-Page에-커스텀-도메인-연결하기&#34;&gt;&lt;a href=&#34;#Github-Page에-커스텀-도메인-연결하기&#34; class=&#34;headerlink&#34; title=&#34;Github Page에 커스텀 도메인 연결하기&#34;&gt;&lt;/a&gt;Github Page에 커스텀 도메인 연결하기&lt;/h1&gt;&lt;p&gt;방법은 다음과 같다.&lt;/p&gt;
&lt;h3 id=&#34;도메인을-구입한-사이트에서-깃허브-리포지토리-주소를-CNAME으로-추가-또는-변경해주기&#34;&gt;&lt;a href=&#34;#도메인을-구입한-사이트에서-깃허브-리포지토리-주소를-CNAME으로-추가-또는-변경해주기&#34; class=&#34;headerlink&#34; title=&#34;도메인을 구입한 사이트에서 깃허브 리포지토리 주소를 CNAME으로 추가 또는 변경해주기&#34;&gt;&lt;/a&gt;도메인을 구입한 사이트에서 깃허브 리포지토리 주소를 CNAME으로 추가 또는 변경해주기&lt;/h3&gt;&lt;p&gt;도메인을 구입한 사이트에서 있어야 할 레코드는 다음과 같다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;레코드명&lt;/th&gt;
&lt;th&gt;이름&lt;/th&gt;
&lt;th&gt;데이터&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;CNAME&lt;/td&gt;
&lt;td&gt;www&lt;/td&gt;
&lt;td&gt;[yourRepo].github.io&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;@&lt;/td&gt;
&lt;td&gt;185.199.108.153&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;@&lt;/td&gt;
&lt;td&gt;185.199.109.153&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;@&lt;/td&gt;
&lt;td&gt;185.199.110.153&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;@&lt;/td&gt;
&lt;td&gt;185.199.111.153&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;네임서버는 따로 이관하지 않아도 된다.&lt;/p&gt;
&lt;h3 id=&#34;블로그로-서비스되고있는-깃허브-페이지의-리포지토리-gt-Setting-gt-Page&#34;&gt;&lt;a href=&#34;#블로그로-서비스되고있는-깃허브-페이지의-리포지토리-gt-Setting-gt-Page&#34; class=&#34;headerlink&#34; title=&#34;블로그로 서비스되고있는 깃허브 페이지의 리포지토리 =&amp;gt; Setting =&amp;gt; Page&#34;&gt;&lt;/a&gt;블로그로 서비스되고있는 깃허브 페이지의 리포지토리 =&amp;gt; Setting =&amp;gt; Page&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;/img/postimg/custom_domain.png&#34; alt=&#34;커스텀 도메인&#34;&gt;&lt;/p&gt;
&lt;p&gt;save를 누르면 위에 등록한 DNS정보가 모두 올바를 경우 해당 주소로 퍼블리시되었다는 알람을 띄운다.&lt;/p&gt;
&lt;p&gt;아래 체크박스를 보면 알 수 있지만 GithubPage 특성상 https 옵션을 활성화할 수 있다.&lt;/p&gt;
&lt;p&gt;도메인으로 접속했을 때 깃허브 페이지가 뜨면 성공!&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://coding-coconut.com/2022/01/21/%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%83%88%EB%8B%A8%EC%9E%A5/</guid>
            <title>블로그 새단장</title>
            <link>https://coding-coconut.com/2022/01/21/%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%83%88%EB%8B%A8%EC%9E%A5/</link>
            <category>잡담</category>
            <pubDate>Fri, 21 Jan 2022 16:40:37 +0900</pubDate>
            <description><![CDATA[ &lt;p&gt;기존 블로그 레이아웃과 테마를 새로 리뉴얼했다!&lt;br&gt;깔끔해서 마음에 든다.&lt;/p&gt;
&lt;p&gt;이번에 새 테마를 만들면서, 기존 Hexo 공식 문서를 많이 파악해 보는 시간을 가졌다.&lt;br&gt;조만간 레이아웃 만들기도 정리해서 포스팅할 예정.&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://coding-coconut.com/2021/09/17/%EB%A7%81%ED%81%AC-%EC%8A%A4%ED%81%AC%EB%9E%A9-%EB%B0%8F-%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C/</guid>
            <title>링크 스크랩 및 참고자료</title>
            <link>https://coding-coconut.com/2021/09/17/%EB%A7%81%ED%81%AC-%EC%8A%A4%ED%81%AC%EB%9E%A9-%EB%B0%8F-%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C/</link>
            <category>스크랩</category>
            <pubDate>Fri, 17 Sep 2021 09:30:08 +0900</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;리눅스-명령어들&#34;&gt;&lt;a href=&#34;#리눅스-명령어들&#34; class=&#34;headerlink&#34; title=&#34;리눅스 명령어들&#34;&gt;&lt;/a&gt;리눅스 명령어들&lt;/h3&gt;&lt;p&gt;&lt;code&gt;sudo grep -ir &amp;#39;bind-address&amp;#39; /etc/mysql/&lt;/code&gt;&lt;br&gt;해당 위치에 원하는 텍스트가 있는 파일을 찾는 명령어&lt;/p&gt;
&lt;p&gt;&lt;code&gt;iptables -I INPUT -s 1.1.1.1 -j DROP&lt;/code&gt;&lt;br&gt;특정 IP막기&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://thisblogbusy.tistory.com/entry/iptables-%ED%8A%B9%EC%A0%95-IP-%EB%A7%89%EA%B8%B0?category=692140&#34;&gt;https://thisblogbusy.tistory.com/entry/iptables-특정-IP-막기?category=692140&lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;cat /var/log/apache2/access.log&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tail access.log&lt;/code&gt;&lt;br&gt;접속 기록 확인&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nohup npm start &amp;amp;&lt;/code&gt;&lt;br&gt;노헙으로 종료가되어도 계속 실행되도록 백그라운드로 npm start실행.&lt;/p&gt;
&lt;h3 id=&#34;https-인증&#34;&gt;&lt;a href=&#34;#https-인증&#34; class=&#34;headerlink&#34; title=&#34;https 인증&#34;&gt;&lt;/a&gt;https 인증&lt;/h3&gt;&lt;p&gt;호스트 서버컴퓨터에 snap 깔고 certbot 깔고&lt;/p&gt;
&lt;p&gt;&lt;code&gt;certbot --apache&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;리버스프록시로 아파치를 설정해뒀다면 아파치 사양으로 certbot이 자동으로 인증서를 설정해줌.&lt;/p&gt;
&lt;h3 id=&#34;ip-접속기록-확인-아파치-이용&#34;&gt;&lt;a href=&#34;#ip-접속기록-확인-아파치-이용&#34; class=&#34;headerlink&#34; title=&#34;ip 접속기록 확인 (아파치 이용)&#34;&gt;&lt;/a&gt;ip 접속기록 확인 (아파치 이용)&lt;/h3&gt;&lt;p&gt;&lt;code&gt;sudo awk &amp;#39;&amp;#123; print $1&amp;#125;&amp;#39; /var/log/apache2/access.log | sort | uniq -c | sort -nr | head -n 10&lt;/code&gt;&lt;br&gt;접속기록 빈도 10위까지 출력&lt;/p&gt;
&lt;h3 id=&#34;ssh-키페어-등록하기&#34;&gt;&lt;a href=&#34;#ssh-키페어-등록하기&#34; class=&#34;headerlink&#34; title=&#34;ssh 키페어 등록하기&#34;&gt;&lt;/a&gt;ssh 키페어 등록하기&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://extrememanual.net/26803&#34;&gt;https://extrememanual.net/26803&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;puttygen 이용, rsa 키페어 생성&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;퍼블릭키와 프라이빗키 저장&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;호스트 서버 들어가서 유저계정 고유 폴더에 .ssh 폴더 만들기&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;mkdir .ssh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vi .ssh/authorized_keys&lt;/code&gt;&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;해당 편집기에 public key 부분을 텍스트 붙여넣기 후 저장&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;드래그앤드롭-라이브러리&#34;&gt;&lt;a href=&#34;#드래그앤드롭-라이브러리&#34; class=&#34;headerlink&#34; title=&#34;드래그앤드롭 라이브러리&#34;&gt;&lt;/a&gt;드래그앤드롭 라이브러리&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://interactjs.io/&#34;&gt;https://interactjs.io/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://web.dev/drag-and-drop/&#34;&gt;https://web.dev/drag-and-drop/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;드래그앤드롭 파일 업로드 및 설명 튜토리얼.&lt;/p&gt;
&lt;h3 id=&#34;Electron-시작하기&#34;&gt;&lt;a href=&#34;#Electron-시작하기&#34; class=&#34;headerlink&#34; title=&#34;Electron 시작하기&#34;&gt;&lt;/a&gt;Electron 시작하기&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://musma.github.io/2019/07/17/electron-getting-started.html&#34;&gt;https://musma.github.io/2019/07/17/electron-getting-started.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Electron을 이용해서 node.js 와 js로 데스크톱 어플리케이션을 만들 수 있다.&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>