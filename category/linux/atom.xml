<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://coding-coconut.com</id>
    <title>Coding Coconut • Posts by &#34;linux&#34; category</title>
    <link href="https://coding-coconut.com" />
    <updated>2022-08-24T09:14:09.000Z</updated>
    <category term="certbot" />
    <category term="aws" />
    <category term="배포" />
    <category term="docker" />
    <category term="hexo" />
    <category term="dns" />
    <category term="github_page" />
    <category term="domain" />
    <category term="error" />
    <category term="issue" />
    <category term="custom_domain" />
    <category term="hexo_deploy" />
    <category term="ssh" />
    <category term="terminal" />
    <category term="cmd" />
    <category term="bash" />
    <category term="https" />
    <category term="인증서" />
    <category term="apache" />
    <category term="pm2" />
    <category term="ubuntu" />
    <category term="podman" />
    <category term="dontstarve" />
    <category term="modding" />
    <category term="스크랩" />
    <category term="비동기" />
    <category term="asyncawait" />
    <category term="postman" />
    <category term="속도 개선" />
    <category term="잡담" />
    <entry>
        <id>https://coding-coconut.com/post/clgyf2h2r002epe5o2whu982z/</id>
        <title>Linux 서버에서 https 인증과 Apache2 프록시패스 설정하기</title>
        <link rel="alternate" href="https://coding-coconut.com/post/clgyf2h2r002epe5o2whu982z/"/>
        <content type="html">&lt;h3 id=&#34;들어가며&#34;&gt;&lt;a href=&#34;#들어가며&#34; class=&#34;headerlink&#34; title=&#34;들어가며&#34;&gt;&lt;/a&gt;들어가며&lt;/h3&gt;&lt;p&gt;인증서 발급방법은 기존에 알고있어서 문제가 되지 않았는데 아파치 설정파일 만지는 법을 까먹어서 한동안 설정파일과 씨름했다.. -.-;;&lt;br&gt;로그인한 유저가 관리자 권한일 경우 굳이 sudo를 입력하지 않아도 된다!&lt;/p&gt;
&lt;h3 id=&#34;0-apache2-를-깔려면-apt를-사용해야-하므로-업데이트가-필요&#34;&gt;&lt;a href=&#34;#0-apache2-를-깔려면-apt를-사용해야-하므로-업데이트가-필요&#34; class=&#34;headerlink&#34; title=&#34;0. apache2 를 깔려면 apt를 사용해야 하므로 업데이트가 필요&#34;&gt;&lt;/a&gt;0. apache2 를 깔려면 apt를 사용해야 하므로 업데이트가 필요&lt;/h3&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo apt update&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;1-linux-전용-apache2-설치&#34;&gt;&lt;a href=&#34;#1-linux-전용-apache2-설치&#34; class=&#34;headerlink&#34; title=&#34;1. linux 전용 apache2 설치&#34;&gt;&lt;/a&gt;1. linux 전용 apache2 설치&lt;/h3&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo apt install apache2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;2-000-default-conf-편집&#34;&gt;&lt;a href=&#34;#2-000-default-conf-편집&#34; class=&#34;headerlink&#34; title=&#34;2. 000-default.conf 편집&#34;&gt;&lt;/a&gt;2. 000-default.conf 편집&lt;/h3&gt;&lt;p&gt;위치는 리눅스 우분투 서버18 기준 맨~ 위 디렉토리 /etc/apache2/site-available/000-default.conf 이다&lt;br&gt;vi 로 편집하거나 (apache2 를 처음 설치하게 되면 기본으로 파일설정 권한이 읽기전용이다 -.-;;;)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;파일 권한 수정(읽기 쓰기 실행 다 허용)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo chmod 777 000-default.conf[혹은 디렉토리]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;000-default.conf 를 아래처럼 편집한 후 저장&lt;br&gt;vi 명령어를 사용해서 즉석으로 편집해도 되고 파일질라같은 ftp 응용프로그램을 이용해서 로컬에서 작성하고 덮어쓰기해도 좋다.&lt;br&gt;vi 명령어일 경우 저장하고 나가기는 esc + :wq!이다&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#LoadModule 구문을 써 줘야 ProxyPass가 작동한다. 이거 미리 설정하면 아래 파일을 실행시키는 스크립트 작성할 필요 x&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LoadModule proxy_module modules/mod_proxy.so&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LoadModule proxy_http_module modules/mod_proxy_http.so&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;VirtualHost *:80&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ServerAdmin webmaster@localhost&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	DocumentRoot /var/www/html&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ServerName yourdomain.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ServerAlias yourdomain.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ProxyRequests Off&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ProxyPreserveHost On&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# 80으로 받으면 아래 주소로 넘긴다. 여기서의 로컬호스트는 apache가 돌아가는 컴퓨터의 로컬호스트.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;#주소창에서 보여지는 주소도 서버네임으로 바뀌어서 보여진다.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	ProxyPass / http://localhost:8080/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	ProxyPassReverse / http://localhost:8080/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ErrorLog &lt;span class=&#34;variable&#34;&gt;$&amp;#123;APACHE_LOG_DIR&amp;#125;&lt;/span&gt;/error.log&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	CustomLog &lt;span class=&#34;variable&#34;&gt;$&amp;#123;APACHE_LOG_DIR&amp;#125;&lt;/span&gt;/access.log combined&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RewriteEngine on&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RewriteCond %&amp;#123;SERVER_NAME&amp;#125; =content-ad-dev.fastview.co.kr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RewriteRule ^ https://%&amp;#123;SERVER_NAME&amp;#125;%&amp;#123;REQUEST_URI&amp;#125; [END,NE,R=permanent]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;3-Apache2-서비스-재가동&#34;&gt;&lt;a href=&#34;#3-Apache2-서비스-재가동&#34; class=&#34;headerlink&#34; title=&#34;3. Apache2 서비스 재가동&#34;&gt;&lt;/a&gt;3. Apache2 서비스 재가동&lt;/h3&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo service apache2 restart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;4-Snap-설치-이미-깔려-있으면-생략&#34;&gt;&lt;a href=&#34;#4-Snap-설치-이미-깔려-있으면-생략&#34; class=&#34;headerlink&#34; title=&#34;4. Snap 설치(이미 깔려 있으면 생략)&#34;&gt;&lt;/a&gt;4. Snap 설치(이미 깔려 있으면 생략)&lt;/h3&gt;&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo snap install core; sudo snap refresh core&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;5-Snap으로-Certbot-설치&#34;&gt;&lt;a href=&#34;#5-Snap으로-Certbot-설치&#34; class=&#34;headerlink&#34; title=&#34;5. Snap으로 Certbot 설치&#34;&gt;&lt;/a&gt;5. Snap으로 Certbot 설치&lt;/h3&gt;&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo snap install --classic certbot&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;6-Apache-사양으로-인증서-발급-apache2-서비스가-가동-중이고-80포트가-뜷려있어야-함&#34;&gt;&lt;a href=&#34;#6-Apache-사양으로-인증서-발급-apache2-서비스가-가동-중이고-80포트가-뜷려있어야-함&#34; class=&#34;headerlink&#34; title=&#34;6. Apache 사양으로 인증서 발급(apache2 서비스가 가동 중이고 80포트가 뜷려있어야 함)&#34;&gt;&lt;/a&gt;6. Apache 사양으로 인증서 발급(apache2 서비스가 가동 중이고 80포트가 뜷려있어야 함)&lt;/h3&gt;&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo certbot --apache&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;머라머라 나오는데 읽어보면 도메인 입력해달라는것과 인증서 만료 시 발송할 이메일좀 설정해달라는 내용&lt;br&gt;그리고.. 뭔가를 보낸다는 내용인데 이 항목은 생략해도 됨&lt;/p&gt;
&lt;p&gt;만약 과정이 꼬여서 000-default.conf를 다시 수정해야 하면, 인증서파일 재설정을 하면 된다.&lt;/p&gt;
&lt;p&gt;인증서가 이미 존재할 때 위 명령어를 입력하면 인증서 목록이 뜨는데 원하는 도메인의 번호를 입력한다.&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1: Attempt to reinstall this existing certificate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;해당 항목을 선택하면 Certbot의 인증서 파일(000-default-le-ssl.conf)이 다시 갱신된다.&lt;/p&gt;
&lt;h3 id=&#34;7-확인&#34;&gt;&lt;a href=&#34;#7-확인&#34; class=&#34;headerlink&#34; title=&#34;7. 확인&#34;&gt;&lt;/a&gt;7. 확인&lt;/h3&gt;&lt;p&gt;웹페이지에 접속해서 자물쇠 표시가 뜨면 성공!&lt;/p&gt;
</content>
        <category term="certbot" />
        <category term="배포" />
        <category term="https" />
        <category term="인증서" />
        <category term="apache" />
        <updated>2022-08-24T09:14:09.000Z</updated>
    </entry>
    <entry>
        <id>https://coding-coconut.com/post/clgyf2h2m000mpe5o5oks5865/</id>
        <title>SSH키로 로그인하는 법</title>
        <link rel="alternate" href="https://coding-coconut.com/post/clgyf2h2m000mpe5o5oks5865/"/>
        <content type="html">&lt;h2 id=&#34;SSH키로-로그인하는-법&#34;&gt;&lt;a href=&#34;#SSH키로-로그인하는-법&#34; class=&#34;headerlink&#34; title=&#34;SSH키로 로그인하는 법&#34;&gt;&lt;/a&gt;SSH키로 로그인하는 법&lt;/h2&gt;&lt;h3 id=&#34;SSH-키-생성하기&#34;&gt;&lt;a href=&#34;#SSH-키-생성하기&#34; class=&#34;headerlink&#34; title=&#34;SSH 키 생성하기&#34;&gt;&lt;/a&gt;SSH 키 생성하기&lt;/h3&gt;&lt;p&gt;깃허브나 벌쳐 인증서버/원격 데이터베이스에 접속할 때 키로그인을 필요로 하기도 한다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;키 생성하기&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight cmd&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ssh-keygen&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;모든 설정 기본값으로 하면 내 컴퓨터/사용자 폴더/.ssh폴더(숨겨진 폴더)안에 다음처럼 rsa 키가 생성된다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;id_rsa&lt;/li&gt;
&lt;li&gt;id_rsa.pub&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;키-파일-등록&#34;&gt;&lt;a href=&#34;#키-파일-등록&#34; class=&#34;headerlink&#34; title=&#34;키 파일 등록&#34;&gt;&lt;/a&gt;키 파일 등록&lt;/h3&gt;&lt;p&gt;ssh 를 이용해서 로그인하려면 이전 과정에서 생성된 두가지 키가 필요하다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;id_rsa (클라이언트 피시가 가지고 있을 프라이빗 키. 이걸로 로그인함!)&lt;/li&gt;
&lt;li&gt;id_rsa.pub (호스트에 등록할 퍼블릭 키. 긁어서 호스트에 등록해야한다.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;id_rsa는 다른 이름이거나 확장자가 &lt;code&gt;.ppk&lt;/code&gt; 또는 &lt;code&gt;.pem&lt;/code&gt;일 수 있다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;.ssh 안에 프라이빗 키를 집어넣고, 퍼블릭 키는 파일을 열어 내부를 긁어서 호스트에 등록한다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;SSH-원격-접속-Config-파일-작성&#34;&gt;&lt;a href=&#34;#SSH-원격-접속-Config-파일-작성&#34; class=&#34;headerlink&#34; title=&#34;SSH 원격 접속 Config 파일 작성&#34;&gt;&lt;/a&gt;SSH 원격 접속 Config 파일 작성&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;터미널 원격 ssh 접속 시 간편 커맨드를 위한 .ssh/config 파일을 설정한다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Host [ConnectionName]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	HostName [HostIP]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	User [HostLoginID]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	IdentityFile ~/.ssh/[YOUR_PRIVATE_KEY_FILE]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;위처럼 만들어 저장해 놓으면&lt;/p&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ssh [ConnectionName]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;으로 간편하게 접속할 수 있다.&lt;/p&gt;
&lt;p&gt;키 파일 위치만 올바르다면 별도의 패스워드를 요구하진 않는다.&lt;/p&gt;
&lt;h3 id=&#34;기타-파일변환&#34;&gt;&lt;a href=&#34;#기타-파일변환&#34; class=&#34;headerlink&#34; title=&#34;기타 파일변환&#34;&gt;&lt;/a&gt;기타 파일변환&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;putty .ppk파일을 제네릭한 .pem으로 변환(윈도즈 putty가 있으면 ppk 그대로 사용해도됨)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Mac 인 경우(선제 homebrew 설치 필요)&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;brew install putty &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puttygen 원본.ppk -O private-openssh -o 내보낼.pem&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;Windows인 경우 putty-keygen exe를 이용한다.&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="ssh" />
        <category term="terminal" />
        <category term="cmd" />
        <category term="bash" />
        <updated>2022-05-20T08:44:10.000Z</updated>
    </entry>
</feed>
